{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","$http","GoogleApiCrawlerService","api","data","search","mydata","fullDetail","q","keyword","country","query","then","results","log","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","get","index","milestones","milestone","http","baseUrl","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","error","promise","$state","DataService","DataLoadingService","tabs","$on","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","goals","tiles","i","tile","tilenames","$cordovaSQLite","$ionicPopup","login","register","$ionicHistory","query1","execute","db","username","rows","length","item","alert","query2","password","rowsAffected","clearCache"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}