{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/facebook-api-crawler.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","$cordovaSQLite","$ionicPlatform","user","getUserAccountDetails","console","debug","show","template","duration","hide","$on","query","execute","db","then","result","log","rows","item","username","firstname","lastname","occupation","error","$http","FacebookApiCrawlerService","GoogleApiCrawlerService","api","data","stuff","searchFacebook","mydata","q","keyword","type","results","warn","search","fullDetail","country","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","extend","loadCommunityFeats","totalprogress","count","get","index","milestones","milestone","progress","config","FacebookProvider","facebookAppId","init","$q","Facebook","deferred","defer","resolve","reject","promise","DataService","goalsmap","when","playstore","http","goals","goal","baseUrl","reduce","setTimeout","JSON","stringify","dataToURI","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","method","$state","DataLoadingService","tabs","encode","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","tiles","i","tile","tilenames","$ionicPopup","login","password","length","query2","query3","alert","register","$ionicHistory","query1","rowsAffected","clearCache","$ionicActionSheet"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,gBDKG,WACH,YENAD,SAAAC,OAAA,gCAEAC,WAAA,aAAA,SAAA,SAAAC,UFYG,WACH,YGfAH,SAAAC,OAAA,kCAEAC,WAAA,eAAA,SAAA,eAAA,gBAAA,iBAAA,iBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAJ,EAAAK,QAEAL,EAAAM,sBAAA,WACAC,QAAAC,MAAA,4BACAN,EAAAO,MACAC,SAAA,2CACAC,SAAA,MAIAT,EAAAU,QAEAZ,EAAAa,IAAA,yBAAA,WACA,GAAAC,GAAA,yFACAX,GAAAY,QAAAC,GAAAF,GAAAG,KAAA,SAAAC,GACAX,QAAAY,IAAA,iBAAAD,EAAAE,KAAAC,KAAA,GAAAC,UACAtB,EAAAK,KAAAkB,UAAAL,EAAAE,KAAAC,KAAA,GAAAE,UACAvB,EAAAK,KAAAmB,SAAAN,EAAAE,KAAAC,KAAA,GAAAG,SACAxB,EAAAK,KAAAoB,WAAAP,EAAAE,KAAAC,KAAA,GAAAI,YACA,SAAAC,GACAnB,QAAAY,IAAAO,aHsBG,WACH,YI/CA7B,SAAAC,OAAA,qBAEAC,WAAA,eAAA,SAAA,gBAAA,QAAA,4BAAA,0BAAA,SAAAC,EAAAE,EAAAyB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,CACA7B,GAAA+B,QACA/B,EAAAgC,MAAAH,EAAAG,MACAhC,EAAAiC,eAAA,WACA/B,EAAAO,MACA,IAAAyB,IACAC,EAAAnC,EAAA+B,KAAAK,QACAC,KAAA,QAEAT,GAAAd,MAAAoB,GACAjB,KAAA,SAAAqB,GACA/B,QAAAY,IAAA,WAAAmB,KAFAV,SAIA,SAAAF,GACAnB,QAAAgC,KAAAb,KALAE,WAOA1B,EAAAU,OAEAZ,EAAAwC,OAAA,WACAtC,EAAAO,MACA,IAAAyB,IACAO,YAAA,EACAN,EAAAnC,EAAA+B,KAAAK,QACAM,QAAA,KAEAZ,GACAhB,MAAAoB,GACAjB,KAAA,SAAAqB,GACAtC,EAAA+B,KAAAO,QAAAA,EAAAA,QACA/B,QAAAY,IAAAmB,EACA,IAAAK,KACA,KAAA,GAAAC,KAAAN,GACAK,EAAAE,KAAAD,KAPAd,WAUA5B,EAAAU,aJqDG,WACH,YK5FAf,SAAAC,OAAA,qBAEAgD,QAAA,sBAAA,cAAA,0BAAA,SAAAC,EAAAlB,GAEA,QAAAmB,GAAAC,EAAAC,IAIA,QAAAC,GAAAF,EAAAC,IAIA,QAAAE,GAAAH,EAAAC,GACA,GAAAG,GAAAJ,EAAAK,IAEA,OADA/C,SAAAY,IAAA,aAAAkC,GACAxB,EAAAf,OACAqB,EAAAkB,IACApC,KAAA,SAAAsC,GAEA,GAAAjB,GAAAiB,EAAAjB,OACA/B,SAAAY,IAAA,WAAAoC,GACA1D,QAAA2D,QAAAlB,EAAA,SAAAmB,GACA,GAAA1B,IACA2B,GAAAD,EAAAE,MACAC,IAAAH,EAAAI,aACAC,KAAAL,EAAAK,KACAC,MAAAN,EAAAM,MACAC,MAAAP,EAAAO,MACAC,QAAAR,EAAAQ,QACAC,MAAAT,EAAAS,MAEArE,SAAAsE,OAAApC,EAAA0B,GACAP,EAAAL,KAAAd,GACAxB,QAAAY,IAAA,4BAAAY,OAKA,QAAAqC,GAAAnB,EAAAC,GACA,GAAAmB,GAAA,EACAC,EAAA,CACA,OAAAvB,GAAAwB,IAAA,oBAAAtD,KAAA,SAAAqB,GACAzC,QAAA2D,QAAAlB,EAAAW,EAAAuB,MAAA,GAAAC,WAAA,SAAAC,EAAAF,GACAjE,QAAAY,IAAA,cAAA8B,EAAAK,KAAA,IAAAoB,GACAA,EAAAF,MAAAA,EAAA,EACAH,GAAAK,EAAAC,SACAL,IACArB,EAAAoB,iBAAAA,EAAAC,EAAA,IAAA,GAEApB,EAAAL,KAAA6B,OAOA,OACA1B,YAAAA,EACAG,yBAAAA,EACAC,kBAAAA,EACAgB,mBAAAA,SLmGG,WACH,YMhKAvE,SAAAC,OAAA,qBAEA8E,QAAA,mBAAA,SAAAC,GACA,GAAAC,GAAA,iBACAD,GAAAE,KAAAD,MAGAhC,QAAA,6BAAA,KAAA,cAAA,WAAA,SAAAkC,EAAAjC,EAAAkC,GAEA,QAAAnE,GAAAiB,GACAxB,QAAAY,IAAA,mBAAAY,GACAxB,QAAAY,IAAA8D,EACA,IAAAC,GAAAF,EAAAG,OAOA,OANAF,GAAAnD,IAAA,UAAAC,EAAA,SAAAwB,GACAA,IAAAA,EAAA7B,MACAwD,EAAAE,QAAA7B,GAEA2B,EAAAG,OAAA9B,KAEA2B,EAAAI,QAEA,OACAxE,MAAAA,SNsKG,WACH,YO7LAjB,SAAAC,OAAA,qBAEAgD,QAAA,2BAAA,KAAA,cAAA,cAAA,SAAAkC,EAAAjC,EAAAwC,GAGA,QAAAzE,GAAAiB,GAEA,GAAAwD,EAAAC,SAAA,CACA,GAAAtE,GAAAqE,EAAAC,SAAAzD,EAAAI,EAEA,OADA5B,SAAAY,IAAA,kBAAAD,GACA8D,EAAAS,KAAAvE,EAAAwE,WAEA,GAAAR,GAAAF,EAAAG,OAaA,OAZAQ,GACApB,IAAA,oBACAtD,KAAA,SAAA2E,GACArF,QAAAY,IAAA,UAAAyE,GACAL,EAAAK,MAAAA,CACA,IAAAJ,KACA3F,SAAA2D,QAAAoC,EAAA,SAAAC,GACAL,EAAAK,EAAAvC,MAAAuC,IAEAN,EAAAC,SAAAA,EACAN,EAAAE,QAAAI,EAAAzD,EAAAI,GAAAuD,aAEAR,EAAAI,QAEA,QAAA9C,GAAAa,GAEA,MADA9C,SAAAY,IAAA,YAAA2E,EAAAzC,IACAvC,GAAAqB,EAAAkB,IA1BA,GAAAyC,GAAA,kCACAH,EAAA5C,CA2BA,QACAjC,MAAAA,EACA0B,OAAAA,EACAR,MAAA,WACAzB,QAAAY,IAAA,YACA4B,EAAAwB,IAAA,oBACAtD,KAAA,SAAA2E,GAEA,MADArF,SAAAY,IAAA,aACAyE,EAAAG,OAAA,SAAAT,EAAAO,GACA,MAAAP,GAAArE,KAAA,WACA,MAAAH,IACAqB,EAAA0D,EAAAvC,KACAb,YAAA,MAEAxB,KAAA,SAAAqB,GACAuD,EAAAH,UAAApD,EACA/B,QAAAY,IAAA,mBAAAmB,EACA,IAAA4C,GAAAF,EAAAG,OAIA,OAHAa,YAAA,WACAd,EAAAE,SAAA,IACA,KACAF,EAAAI,UAZAA,SAaA,SAAA5D,GACAnB,QAAAgC,KAAAb,MAEAsD,EAAAS,QAAAxE,KAAA,WACAV,QAAAY,IAAA8E,KAAAC,UAAAN,gBPsMG,WACH,YQhQA/F,SAAAC,OAAA,qBAEAgD,QAAA,eAAA,KAAA,QAAA,SAAAkC,EAAArD,GACA,QAAAwE,GAAApE,GACA,GAAAa,GAAA1B,IACA,KAAA0B,IAAAb,GACAA,EAAAqE,eAAAxD,IACA1B,EAAA2B,KAAAwD,mBAAAzD,GAAA,IAAAyD,mBAAAtE,EAAAa,IACA,OAAA1B,GAAAoF,KAAA,KAEA,QAAA/B,GAAAX,EAAA7B,EAAAwE,GACA,GAAAC,GAAA5C,EAAA,IAAAuC,EAAApE,GACAmD,EAAAF,EAAAG,OAaA,OAZAxD,IACAiC,IAAA4C,EACAC,OAAA,MACAF,QAAAA,GAAA,OACAtF,KAAA,SAAAC,GACAA,GAAAA,EAAAa,KAGAmD,EAAAE,QAAAlE,EAAAa,MAFAmD,EAAAG,OAAA,gBAGA,SAAA3D,GACAwD,EAAAG,OAAA3D,KAEAwD,EAAAI,QAEA,OACAa,UAAAA,EACA5B,IAAAA,SRsQG,WACH,YSpSA1E,SAAAC,OAAA,+BAEAC,WAAA,YAAA,SAAA,SAAA,eAAA,cAAA,qBAAA,SAAAC,EAAA0G,EAAAzG,EAAAsF,EAAAoB,GAEA,QAAAR,GAAApE,GACA,GAAAa,GAAA1B,IACA,KAAA0B,IAAAb,GACAA,EAAAqE,eAAAxD,IACA1B,EAAA2B,KAAAwD,mBAAAzD,GAAA,IAAAyD,mBAAAtE,EAAAa,IACA,OAAA1B,GAAAoF,KAAA,KAGAtG,EAAA+B,QACA/B,EAAA4G,QACA5G,EAAA6G,OAAA,SAAAvD,GACA,MAAA,sCAAA6C,GAAAhE,EAAAmB,KAGAtD,EAAAa,IAAA,yBAAA,WACA,MAAA0E,GAAAxD,MAAAwD,EAAAxD,KAAAuB,MAEAzD,QAAAsE,OAAAnE,EAAA+B,KAAAwD,EAAAxD,MAEAlC,QAAAsE,OAAAnE,EAAA4G,MACAE,UACAC,wBACAC,iBACAC,oBAGAN,EAAA3D,YAAAhD,EAAA+B,KAAA/B,EAAA4G,KAAAE,QACAH,EAAAxD,yBAAAnD,EAAA+B,KAAA/B,EAAA4G,KAAAG,sBACAJ,EAAAvD,kBAAApD,EAAA+B,KAAA/B,EAAA4G,KAAAI,eACA/F,KAAA,WACAV,QAAAY,IAAAnB,EAAA4G,YAEAD,GAAAvC,mBAAApE,EAAA+B,KAAA/B,EAAA4G,KAAAK,iBAhBAP,EAAAQ,GAAA,yBT2TG,WACH,YUhVArH,SAAAC,OAAA,gCAEAC,WAAA,YAAA,SAAA,QAAA,SAAA,cAAA,SAAAC,EAAA2B,EAAA+E,EAAAnB,GAIA,QAAA4B,GAAA3C,GACA,OACAZ,IAAA,UAAAY,EAAA,OACAA,MAAAA,EAAAH,cAAA,EACA+C,SAAA,WACA,MAAA,aAEAC,MAAA,WACA,MAAArH,EAAAsH,SAGA/B,EAAAxD,KAAAwF,KACAhH,QAAAY,IAAA,OAAAoE,EAAAxD,MACA2E,EAAAQ,GAAA,kBAIAlH,EAAAsH,QAAA,OApBAtH,EAAAa,IAAA,mBAAA,WACAb,EAAAsH,QAAA,OAwBA3F,EAAA4C,IAAA,oBACAtD,KAAA,SAAAqB,GACA,GAAAsD,GAAAtD,EAAAP,IACA/B,GAAAwH,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EAAA,CACA,GAAAC,GAAAP,EAAAM,EACAC,GAAApE,KAAAsC,EAAA6B,EAAA,GAAAnE,KACAtD,EAAAwH,MAAA3E,KAAA6E,MAIA1H,EAAA2H,aACA3H,EAAA2H,UAAA9E,KAAA,cACA7C,EAAA2H,UAAA9E,KAAA,eACA7C,EAAA2H,UAAA9E,KAAA,8BACA7C,EAAA2H,UAAA9E,KAAA,qBACA7C,EAAA2H,UAAA9E,KAAA,mBACA7C,EAAA2H,UAAA9E,KAAA,8BACA7C,EAAA2H,UAAA9E,KAAA,+BACA7C,EAAA2H,UAAA9E,KAAA,mCACA7C,EAAA2H,UAAA9E,KAAA,2CACA7C,EAAA2H,UAAA9E,KAAA,wBACA7C,EAAA2H,UAAA9E,KAAA,sCACA7C,EAAA2H,UAAA9E,KAAA,0CACA7C,EAAA2H,UAAA9E,KAAA,kBACA7C,EAAA2H,UAAA9E,KAAA,oBACA7C,EAAA2H,UAAA9E,KAAA,gBACA7C,EAAA2H,UAAA9E,KAAA,yCACA7C,EAAA2H,UAAA9E,KAAA,oCVsVG,WACH,YW/YAhD,SAAAC,OAAA,mCAEAC,WAAA,eAAA,SAAA,SAAA,gBAAA,iBAAA,cAAA,SAAAC,EAAA0G,EAAAxG,EAAAC,EAAAyH,GAEA5H,EAAA+B,QAEA/B,EAAA6H,MAAA,WACA3H,EAAAO,MACA,IAAAK,GAAA,wDACAX,GAAAY,QAAAC,GAAAF,GAAAd,EAAA+B,KAAAT,SAAAtB,EAAA+B,KAAA+F,WAAA7G,KAAA,SAAAC,GACA,GAAAA,EAAAE,KAAA2G,OAAA,EAAA,CACA,GAAAC,GAAA,0BACA7H,GAAAY,QAAAC,GAAAgH,EACA,IAAAC,GAAA,oDACA9H,GAAAY,QAAAC,GAAAiH,GAAAjI,EAAA+B,KAAAT,WACAf,QAAAY,IAAA,eAAAD,EAAAE,KAAAC,KAAA,GAAAE,UACAqG,GAAAM,OACAlE,MAAA,YAAA9C,EAAAE,KAAAC,KAAA,GAAAC,UAEAoF,GAAAQ,GAAA,qBACA,CACA3G,QAAAY,IAAA,gBACAyG,GAAAM,OACAlE,MAAA,wBAGA9D,EAAAU,QACA,SAAAc,GACAnB,QAAAY,IAAAO,GACAxB,EAAAU,UAIAZ,EAAAmI,SAAA,WACAzB,EAAAQ,GAAA,mBXsZG,WACH,YYzbArH,SAAAC,OAAA,oCACAC,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAA,SAAAC,EAAAG,EAAAyH,EAAAQ,EAAA1B,GAEA1G,EAAA+B,QAEA/B,EAAAmI,SAAA,WACA,GAAAE,GAAA,8CACAlI,GAAAY,QAAAC,GAAAqH,GAAArI,EAAA+B,KAAAT,WAAAL,KAAA,SAAAC,GACA,GAAAA,EAAAE,KAAA2G,QAAA,EAEA,MADAxH,SAAAY,IAAA,kBAAAD,EAAAE,KAAAC,KAAA,GAAAC,UACAsG,EAAAM,OACAlE,MAAA,8CAGA,IAAAgE,GAAA,+FACA7H,GAAAY,QAAAC,GAAAgH,GAAAhI,EAAA+B,KAAAT,SAAAtB,EAAA+B,KAAA+F,SAAA9H,EAAA+B,KAAAR,UAAAvB,EAAA+B,KAAAP,SAAAxB,EAAA+B,KAAAN,aAAAR,KAAA,SAAAC,GACAX,QAAAY,IAAA,kBAAAD,EAAAoH,cACA/H,QAAAY,IAAAnB,EAAA+B,KAAAT,SAAA,IAAAtB,EAAA+B,KAAA+F,UACAF,EAAAM,OACAlE,MAAA,oBAAAhE,EAAA+B,KAAAT,SAAA,0BAGAL,KAAA,WACAyF,EAAAQ,GAAA,aAEAkB,EAAAG,cACA,SAAA7G,GACAwG,MAAA,SAAAxG,GACAnB,QAAAY,IAAAO,MAGA,SAAAA,GACAwG,MAAA,SAAAxG,GACAnB,QAAAY,IAAAO,YZgcG,WACH,YaleA7B,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,iBAAA,oBAAA,gBAAA,SAAAC,EAAAG,EAAAqI,EAAAJ,GACApI,EAAAK,QAEAL,EAAAa,IAAA,yBAAA,WACA,GAAAC,GAAA,yFACAX,GAAAY,QAAAC,GAAAF,GAAAG,KAAA,SAAAC,GACAX,QAAAY,IAAAD,EAAAE,KAAAC,KAAA,IACArB,EAAAK,KAAAkB,UAAAL,EAAAE,KAAAC,KAAA,GAAAE,UACAvB,EAAAK,KAAAmB,SAAAN,EAAAE,KAAAC,KAAA,GAAAG,SACAxB,EAAAK,KAAAiB,SAAAJ,EAAAE,KAAAC,KAAA,GAAAC,SACAtB,EAAAK,KAAAoB,WAAAP,EAAAE,KAAAC,KAAA,GAAAI,YACA,SAAAC,GACAnB,QAAAY,IAAAO","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['facebook']);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\r\n        \r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPlatform\", function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\r\n\r\n        $scope.user = {}\r\n\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            $ionicLoading.hide();\r\n        }\r\n        $scope.$on('$ionicView.beforeEnter', function(){\r\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n            $cordovaSQLite.execute(db, query).then(function(result){\r\n            console.log(\"Current user: \" + result.rows.item(0).username);\r\n            $scope.user.firstname = result.rows.item(0).firstname;\r\n            $scope.user.lastname = result.rows.item(0).lastname;\r\n            $scope.user.occupation = result.rows.item(0).occupation;\r\n          }, function(error){\r\n                  console.log(error);\r\n          }) \r\n        })\r\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"FacebookApiCrawlerService\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.stuff = GoogleApiCrawlerService.stuff;\r\n  $scope.searchFacebook = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      q: $scope.data.keyword,\r\n      type: 'topic'\r\n    };\r\n    FacebookApiCrawlerService.query(mydata)\r\n    .then(function(results) {\r\n      console.log('Facebook', results);\r\n    })\r\n    .catch(function(error) {\r\n      console.warn(error);\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, resultsCollection) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, resultsCollection) {\r\n\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      console.log(\"Response\", response);\r\n      angular.forEach(results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        angular.extend(data, app);\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, resultsCollection) {\r\n\t\tvar totalprogress = 0;\r\n\t\tvar count = 0;\r\n    return HttpService.get('/json/goals.json').then(function(results) {\r\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\r\n        console.log('Milestone (' + model.name + ')', milestone);\r\n         milestone.index = index + 1;\r\n\t\t\t\t totalprogress += milestone.progress;\r\n\t\t\t\t count++;\r\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\r\n\r\n        resultsCollection.push(milestone);\r\n\r\n\r\n      });\r\n    });\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.config([\"FacebookProvider\", function(FacebookProvider) {\r\n  var facebookAppId = \"456621651128777\";\r\n  FacebookProvider.init(facebookAppId);\r\n}])\r\n\r\n.service('FacebookApiCrawlerService', [\"$q\", \"HttpService\", \"Facebook\", function($q, HttpService, Facebook) {\r\n  var http = HttpService;\r\n  function query(data) {\r\n    console.log('Querying data...', data);\r\n    console.log(Facebook);\r\n    var deferred = $q.defer();\r\n    Facebook.api('/search', data, function(response) {\r\n      if (response && !response.error)\r\n        deferred.resolve(response);\r\n      else\r\n        deferred.reject(response);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    query: query\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', [\"$q\", \"HttpService\", \"DataService\", function($q, HttpService, DataService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    // find map in json file\r\n    if (DataService.goalsmap) {\r\n      var result = DataService.goalsmap[data.q];\r\n      console.log(\"Goals (cache): \", result);\r\n      return $q.when(result.playstore);\r\n    }\r\n    var deferred = $q.defer();\r\n    http\r\n    .get('/json/goals.json')\r\n    .then(function(goals) {\r\n      console.log(\"Goals: \", goals);\r\n      DataService.goals = goals;\r\n      var goalsmap = {};\r\n      angular.forEach(goals, function(goal) {\r\n        goalsmap[goal.name] = goal;\r\n      });\r\n      DataService.goalsmap = goalsmap;\r\n      deferred.resolve(goalsmap[data.q].playstore);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  function search(keywords) {\r\n    console.log(\"Search: \", [baseUrl, keywords]);\r\n    return query({q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search,\r\n    stuff: function() {\r\n      console.log('Stuffing');\r\n      HttpService.get('/json/goals.json')\r\n      .then(function(goals) {\r\n        console.log('got goals');\r\n        return goals.reduce(function(promise, goal) {\r\n          return promise.then(function() {\r\n            return query({\r\n              q: goal.name,\r\n              fullDetail: false\r\n            });\r\n        }).then(function(results) {\r\n            goal.playstore = results;\r\n            console.log(\"Processed goal: \", results);\r\n            var deferred = $q.defer();\r\n            setTimeout(function() {\r\n              deferred.resolve(true);\r\n            }, 1000);\r\n            return deferred.promise;\r\n          }).catch(function(error) {\r\n            console.warn(error);\r\n          });\r\n        }, $q.when()).then(function() {\r\n          console.log(JSON.stringify(goals));\r\n        });\r\n      })\r\n    }\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\tfunction dataToURI(data) {\r\n\t\tvar key, result = [];\r\n\t\tfor (key in data)\r\n\t\t\tif (data.hasOwnProperty(key))\r\n\t\t\t\tresult.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n\t\treturn result.join('&');\r\n\t};\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\t$scope.encode = function(name) {\r\n\t\treturn \"https://facebook.com/search/pages/?\" + dataToURI({q: name});\r\n\t};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      index: index, totalprogress: 0,\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $ionicLoading.show();\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(db, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('sidemenu.home');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\");\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n\t\t\t\t\t$ionicLoading.hide();\r\n      }, function(error){\r\n          console.log(error);\r\n\t\t\t\t\t$ionicLoading.hide();\r\n     })\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", \"$state\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\r\n\t$scope.user = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function(){\r\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\r\n\t\tconsole.log(result.rows.item(0))\r\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\r\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\r\n\t\t$scope.user.username = result.rows.item(0).username;\r\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\r\n\t}, function(error){\r\n          console.log(error);\r\n    })\r\n\r\n\t})\r\n}]);\n}());\n","angular.module('bluehacks.backend', ['facebook']);\r\n","angular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', function ($scope) {\r\n        \r\n});\r\n","angular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\r\n\r\n        $scope.user = {}\r\n\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            $ionicLoading.hide();\r\n        }\r\n        $scope.$on('$ionicView.beforeEnter', function(){\r\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n            $cordovaSQLite.execute(db, query).then(function(result){\r\n            console.log(\"Current user: \" + result.rows.item(0).username);\r\n            $scope.user.firstname = result.rows.item(0).firstname;\r\n            $scope.user.lastname = result.rows.item(0).lastname;\r\n            $scope.user.occupation = result.rows.item(0).occupation;\r\n          }, function(error){\r\n                  console.log(error);\r\n          }) \r\n        })\r\n    });\r\n","angular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.stuff = GoogleApiCrawlerService.stuff;\r\n  $scope.searchFacebook = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      q: $scope.data.keyword,\r\n      type: 'topic'\r\n    };\r\n    FacebookApiCrawlerService.query(mydata)\r\n    .then(function(results) {\r\n      console.log('Facebook', results);\r\n    })\r\n    .catch(function(error) {\r\n      console.warn(error);\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, resultsCollection) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, resultsCollection) {\r\n\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      console.log(\"Response\", response);\r\n      angular.forEach(results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        angular.extend(data, app);\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, resultsCollection) {\r\n\t\tvar totalprogress = 0;\r\n\t\tvar count = 0;\r\n    return HttpService.get('/json/goals.json').then(function(results) {\r\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\r\n        console.log('Milestone (' + model.name + ')', milestone);\r\n         milestone.index = index + 1;\r\n\t\t\t\t totalprogress += milestone.progress;\r\n\t\t\t\t count++;\r\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\r\n\r\n        resultsCollection.push(milestone);\r\n\r\n\r\n      });\r\n    });\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.config(function(FacebookProvider) {\r\n  var facebookAppId = \"456621651128777\";\r\n  FacebookProvider.init(facebookAppId);\r\n})\r\n\r\n.service('FacebookApiCrawlerService', function($q, HttpService, Facebook) {\r\n  var http = HttpService;\r\n  function query(data) {\r\n    console.log('Querying data...', data);\r\n    console.log(Facebook);\r\n    var deferred = $q.defer();\r\n    Facebook.api('/search', data, function(response) {\r\n      if (response && !response.error)\r\n        deferred.resolve(response);\r\n      else\r\n        deferred.reject(response);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    query: query\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', function($q, HttpService, DataService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    // find map in json file\r\n    if (DataService.goalsmap) {\r\n      var result = DataService.goalsmap[data.q];\r\n      console.log(\"Goals (cache): \", result);\r\n      return $q.when(result.playstore);\r\n    }\r\n    var deferred = $q.defer();\r\n    http\r\n    .get('/json/goals.json')\r\n    .then(function(goals) {\r\n      console.log(\"Goals: \", goals);\r\n      DataService.goals = goals;\r\n      var goalsmap = {};\r\n      angular.forEach(goals, function(goal) {\r\n        goalsmap[goal.name] = goal;\r\n      });\r\n      DataService.goalsmap = goalsmap;\r\n      deferred.resolve(goalsmap[data.q].playstore);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  function search(keywords) {\r\n    console.log(\"Search: \", [baseUrl, keywords]);\r\n    return query({q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search,\r\n    stuff: function() {\r\n      console.log('Stuffing');\r\n      HttpService.get('/json/goals.json')\r\n      .then(function(goals) {\r\n        console.log('got goals');\r\n        return goals.reduce(function(promise, goal) {\r\n          return promise.then(function() {\r\n            return query({\r\n              q: goal.name,\r\n              fullDetail: false\r\n            });\r\n        }).then(function(results) {\r\n            goal.playstore = results;\r\n            console.log(\"Processed goal: \", results);\r\n            var deferred = $q.defer();\r\n            setTimeout(function() {\r\n              deferred.resolve(true);\r\n            }, 1000);\r\n            return deferred.promise;\r\n          }).catch(function(error) {\r\n            console.warn(error);\r\n          });\r\n        }, $q.when()).then(function() {\r\n          console.log(JSON.stringify(goals));\r\n        });\r\n      })\r\n    }\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('HttpService', function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n});\r\n","angular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\tfunction dataToURI(data) {\r\n\t\tvar key, result = [];\r\n\t\tfor (key in data)\r\n\t\t\tif (data.hasOwnProperty(key))\r\n\t\t\t\tresult.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n\t\treturn result.join('&');\r\n\t};\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\t$scope.encode = function(name) {\r\n\t\treturn \"https://facebook.com/search/pages/?\" + dataToURI({q: name});\r\n\t};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n});\r\n","angular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      index: index, totalprogress: 0,\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n});\r\n","angular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $ionicLoading.show();\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(db, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('sidemenu.home');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\");\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n\t\t\t\t\t$ionicLoading.hide();\r\n      }, function(error){\r\n          console.log(error);\r\n\t\t\t\t\t$ionicLoading.hide();\r\n     })\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n});\r\n","angular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n});\r\n","angular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\r\n\t$scope.user = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function(){\r\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\r\n\t\tconsole.log(result.rows.item(0))\r\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\r\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\r\n\t\t$scope.user.username = result.rows.item(0).username;\r\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\r\n\t}, function(error){\r\n          console.log(error);\r\n    })\r\n\r\n\t})\r\n});\r\n"]}