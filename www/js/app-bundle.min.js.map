{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","$http","GoogleApiCrawlerService","api","data","search","mydata","fullDetail","q","keyword","country","query","then","results","log","res","key","push","service","loadFbPages","model","loadKickstarterCharities","loadPlayStoreApps","resultsCollection","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","HttpService","http","get","baseUrl","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","error","promise","$state","DataService","DataLoadingService","tabs","$on","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","index","getClass","click","current","this","goals","tiles","i","tile","tilenames","$cordovaSQLite","$ionicPopup","login","register","$ionicHistory","query1","execute","db","username","rows","length","item","alert","query2","password","rowsAffected","clearCache"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\r\n        \r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            var firstname = \"Viktor Mikhael\";\r\n            var lastname = \"Dela Cruz\";\r\n            $scope.firstname = firstname;\r\n            $scope.lastname = lastname;\r\n\r\n            $ionicLoading.hide();\r\n        }\r\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', [\"GoogleApiCrawlerService\", function(GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      angular.forEach(response.results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    return http.get(baseUrl, data);\r\n  };\r\n  function search(keywords) {\r\n    return http.get(baseUrl, {q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n        /*\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n        */\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\r\n\r\n}]);\n}());\n","angular.module('bluehacks.backend', []);\r\n","angular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', function ($scope) {\r\n        \r\n});\r\n","angular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            var firstname = \"Viktor Mikhael\";\r\n            var lastname = \"Dela Cruz\";\r\n            $scope.firstname = firstname;\r\n            $scope.lastname = lastname;\r\n\r\n            $ionicLoading.hide();\r\n        }\r\n    });\r\n","angular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', function(GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      angular.forEach(response.results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, results) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', function(HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    return http.get(baseUrl, data);\r\n  };\r\n  function search(keywords) {\r\n    return http.get(baseUrl, {q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('HttpService', function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n});\r\n","angular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n});\r\n","angular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n        /*\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n        */\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n});\r\n","angular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n});\r\n","angular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n});\r\n","angular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', function($scope) {\r\n\r\n});\r\n"]}