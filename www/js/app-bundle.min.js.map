{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/crawlers/google-api-crawler.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","service","createTile","index","url","getClass","current","this","click","$on","tiles","i","push","$state","$cordovaSQLite","$ionicPopup","data","login","go","register","log","$ionicHistory","query1","execute","db","username","then","result","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","error"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,6BAAA,+BACAD,QAAAC,OAAA,8BAAA,+BACAD,QAAAC,OAAA,oCDKG,WACH,YERAD,SAAAC,OAAA,gCAEAC,WAAA,aAAA,SAAA,SAAAC,UFcG,WACH,YGjBAH,SAAAC,OAAA,kCAEAC,WAAA,eAAA,SAAA,eAAA,gBAAA,SAAAC,EAAAC,EAAAC,GACAF,EAAAG,sBAAA,WACAC,QAAAC,MAAA,4BACAH,EAAAI,MACAC,SAAA,2CACAC,SAAA,KAIA,IAAAC,GAAA,iBACAC,EAAA,WACAV,GAAAS,UAAAA,EACAT,EAAAU,SAAAA,EAEAR,EAAAS,cHuBG,WACH,YIxCAd,SAAAC,OAAA,8BAEAc,QAAA,2BAAA,SAAA,SAAAZ,GACA,eJ6CG,WACH,YKjDAH,SAAAC,OAAA,gCAEAC,WAAA,YAAA,SAAA,SAAAC,GAIA,QAAAa,GAAAC,GACA,OACAC,IAAA,UAAAD,EAAA,OACAE,SAAA,WACA,MAAA,OAAAhB,EAAAiB,QACA,YACAjB,EAAAiB,SAAAC,KACA,YAEA,gBAGAC,MAAA,WACA,MAAAnB,EAAAiB,QACAjB,EAAAiB,QAAAC,KAEAlB,EAAAiB,QAAA,OAnBAjB,EAAAoB,IAAA,mBAAA,WACApB,EAAAiB,QAAA,OAsBAjB,EAAAqB,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EACAtB,EAAAqB,MAAAE,KAAAV,EAAAS,ULuDG,WACH,YMpFAzB,SAAAC,OAAA,mCAEAC,WAAA,eAAA,SAAA,SAAA,iBAAA,cAAA,SAAAC,EAAAwB,EAAAC,EAAAC,GAEA1B,EAAA2B,QAEA3B,EAAA4B,MAAA,WACAJ,EAAAK,GAAA,kBAyBA7B,EAAA8B,SAAA,WACA1B,QAAA2B,IAAA,WACAP,EAAAK,GAAA,mBN2FG,WACH,YO9HAhC,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAAC,EAAAyB,EAAAC,EAAAM,GAEAhC,EAAA2B,QAEA3B,EAAA8B,SAAA,WACA1B,QAAA2B,IAAA,wBACA,IAAAE,GAAA,8CACAR,GAAAS,QAAAC,GAAAF,GAAAjC,EAAA2B,KAAAS,WAAAC,KAAA,SAAAC,GACA,GAAAA,EAAAC,KAAAC,QAAA,EAAA,CACApC,QAAA2B,IAAA,kBAAAO,EAAAC,KAAAE,KAAA,GAAAL,SACAV,GAAAgB,OACAC,MAAA,mDAEA,CACA,GAAAC,GAAA,qDACAnB,GAAAS,QAAAC,GAAAS,GAAA5C,EAAA2B,KAAAS,SAAApC,EAAA2B,KAAAkB,WAAAR,KAAA,SAAAC,GACAlC,QAAA2B,IAAA,kBAAAO,EAAAQ,cACA1C,QAAA2B,IAAA/B,EAAA2B,KAAAS,SAAA,IAAApC,EAAA2B,KAAAkB,SACAnB,GAAAgB,OACAC,MAAA,oBAAA3C,EAAA2B,KAAAS,SAAA,oBAAApC,EAAA2B,KAAAkB,SAAA,KAEAb,GAAAe,cACA,SAAAC,GACAN,MAAAM,GACA5C,QAAA2B,IAAAiB,OAGA,SAAAA,GACAN,MAAAM,GACA5C,QAAA2B,IAAAiB,YPqIG,WACH,YQrKAnD,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,SAAAC","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', [\"$scope\", function($scope) {\n    return {};\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', function($scope) {\n    return {};\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}