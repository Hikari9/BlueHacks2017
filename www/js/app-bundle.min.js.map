{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/crawlers/google-api-crawler.js","home/js/home.js","register/js/register.js","sidemenu/js/sidemenu.js","landing/js/landing.js"],"names":["angular","module","service","$scope","controller","$cordovaSQLite","$ionicPopup","$ionicHistory","data","register","console","log","query1","execute","db","username","then","result","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","error","$state","login","query","go"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,6BAAA,+BACAD,QAAAC,OAAA,8BAAA,+BACAD,QAAAC,OAAA,oCDKG,WACH,YERAD,SAAAC,OAAA,8BAEAC,QAAA,2BAAA,SAAA,SAAAC,GACA,eFaG,WACH,YGjBAH,SAAAC,OAAA,gCAEAG,WAAA,YAAA,SAAA,SAAAD,UHuBG,WACH,YI1BAH,SAAAC,OAAA,oCAEAG,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAAD,EAAAE,EAAAC,EAAAC,GAEAJ,EAAAK,QAEAL,EAAAM,SAAA,WACAC,QAAAC,IAAA,wBACA,IAAAC,GAAA,8CACAP,GAAAQ,QAAAC,GAAAF,GAAAT,EAAAK,KAAAO,WAAAC,KAAA,SAAAC,GACA,GAAAA,EAAAC,KAAAC,QAAA,EAAA,CACAT,QAAAC,IAAA,kBAAAM,EAAAC,KAAAE,KAAA,GAAAL,SACAT,GAAAe,OACAC,MAAA,mDAEA,CACA,GAAAC,GAAA,qDACAlB,GAAAQ,QAAAC,GAAAS,GAAApB,EAAAK,KAAAO,SAAAZ,EAAAK,KAAAgB,WAAAR,KAAA,SAAAC,GACAP,QAAAC,IAAA,kBAAAM,EAAAQ,cACAf,QAAAC,IAAAR,EAAAK,KAAAO,SAAA,IAAAZ,EAAAK,KAAAgB,SACAlB,GAAAe,OACAC,MAAA,oBAAAnB,EAAAK,KAAAO,SAAA,oBAAAZ,EAAAK,KAAAgB,SAAA,KAEAjB,GAAAmB,cACA,SAAAC,GACAN,MAAAM,GACAjB,QAAAC,IAAAgB,OAGA,SAAAA,GACAN,MAAAM,GACAjB,QAAAC,IAAAgB,YJiCG,WACH,YKjEA3B,SAAAC,OAAA,oCAEAG,WAAA,gBAAA,SAAA,SAAAD,ULuEG,WACH,YM1EAH,SAAAC,OAAA,mCAEAG,WAAA,eAAA,SAAA,SAAA,iBAAA,cAAA,SAAAD,EAAAyB,EAAAvB,EAAAC,GAEAH,EAAAK,QAEAL,EAAA0B,MAAA,WACAnB,QAAAC,IAAA,iBACA,IAAAmB,GAAA,wDACAzB,GAAAQ,QAAAC,GAAAgB,GAAA3B,EAAAK,KAAAO,SAAAZ,EAAAK,KAAAgB,WAAAR,KAAA,SAAAC,GACA,GAAAA,EAAAC,KAAAC,OAAA,EAAA,CAMAb,EAAAe,OACAC,MAAA,YAAAL,EAAAC,KAAAE,KAAA,GAAAL,UAEAa,GAAAG,GAAA,eACA,CACArB,QAAAC,IAAA,gBACAL,GAAAe,OACAC,MAAA,0BAGA,SAAAK,GACAjB,QAAAC,IAAAgB,MAIAxB,EAAAM,SAAA,WACAC,QAAAC,IAAA,WACAiB,EAAAG,GAAA","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', [\"$scope\", function($scope) {\n    return {};\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n\t\tconsole.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            /*var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);*/\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n","angular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n","angular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', function($scope) {\n    return {};\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n\t\tconsole.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            /*var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);*/\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n"]}