{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","account/js/account.js","home/js/home.js","goal/js/goal.js","register/js/register.js","landing/js/landing.js","about/js/about.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$ionicLoading","$http","GoogleApiCrawlerService","api","data","search","show","mydata","fullDetail","q","keyword","country","query","then","results","console","log","res","key","push","hide","service","loadFbPages","model","loadKickstarterCharities","loadPlayStoreApps","resultsCollection","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","HttpService","http","get","baseUrl","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","error","promise","$stateParams","getUserAccountDetails","debug","template","duration","firstname","lastname","$state","DataService","createTile","index","getClass","click","current","this","go","$on","goals","tiles","i","tile","tilenames","DataLoadingService","tabs","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","$cordovaSQLite","$ionicPopup","$ionicHistory","register","query1","execute","db","username","rows","length","item","alert","query2","password","rowsAffected","clearCache","login"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"GoogleApiCrawlerService\", function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}