{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/crawlers/google-api-crawler.js","backend/services/http.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","service","$scope","HttpService","baseUrl","search","keywords","get","q","$q","$http","url","data","timeout","deferred","defer","method","then","result","resolve","good","error","promise","config","$httpProvider","defaults","headers","post","transformRequest","unshift","key","hasOwnProperty","push","encodeURIComponent","join","controller","createTile","index","getClass","current","this","click","$on","tiles","i","$state","$cordovaSQLite","$ionicPopup","login","go","register","console","log","$ionicHistory","query1","execute","db","username","rows","length","item","alert","title","query2","password","rowsAffected","clearCache"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,+BACAD,QAAAC,OAAA,8BAAA,+BACAD,QAAAC,OAAA,oCDKG,WACH,YERAD,SAAAC,OAAA,8BAEAC,QAAA,2BAAA,SAAA,cAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,iCAEA,QACAC,OAAA,SAAAC,GACA,MAAAH,GAAAI,IAAAH,GAAAI,EAAAF,YFeG,WACH,YGvBAP,SAAAC,OAAA,8BAEAC,QAAA,eAAA,SAAA,KAAA,QAAA,SAAAC,EAAAO,EAAAC,GACA,OACAH,IAAA,SAAAI,EAAAC,EAAAC,GACA,GAAAC,GAAAL,EAAAM,OAcA,OAbAL,IACAC,IAAAA,EACAC,KAAAA,EACAI,OAAA,MACAH,QAAAA,GAAA,OACAI,KAAA,SAAAC,GACAA,GAAAA,EAAAN,KAGAE,EAAAK,SAAAC,MAAA,EAAAF,OAAAA,EAAAN,OAFAE,EAAAK,SAAAC,MAAA,EAAAC,MAAA,iBAGA,SAAAA,GACAP,EAAAK,SAAAC,MAAA,EAAAC,MAAAA,MAEAP,EAAAQ,aAMAC,QAAA,gBAAA,SAAAC,GAGAA,EAAAC,SAAAC,QAAAC,KAAA,gBAAA,oCACAH,EAAAC,SAAAG,iBAAAC,QAAA,SAAAjB,GAEA,GAAAkB,GAAAZ,IACA,IAAA,gBAAAN,GACA,MAAAA,EACA,KAAAkB,IAAAlB,GACAA,EAAAmB,eAAAD,IACAZ,EAAAc,KAAAC,mBAAAH,GAAA,IAAAG,mBAAArB,EAAAkB,IACA,OAAAZ,GAAAgB,KAAA,aH8BG,WACH,YIpEAnC,SAAAC,OAAA,gCAEAmC,WAAA,YAAA,SAAA,SAAAjC,GAIA,QAAAkC,GAAAC,GACA,OACA1B,IAAA,UAAA0B,EAAA,OACAC,SAAA,WACA,MAAA,OAAApC,EAAAqC,QACA,YACArC,EAAAqC,SAAAC,KACA,YAEA,gBAGAC,MAAA,WACA,MAAAvC,EAAAqC,QACArC,EAAAqC,QAAAC,KAEAtC,EAAAqC,QAAA,OAnBArC,EAAAwC,IAAA,mBAAA,WACAxC,EAAAqC,QAAA,OAsBArC,EAAAyC,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EACA1C,EAAAyC,MAAAX,KAAAI,EAAAQ,UJ0EG,WACH,YKvGA7C,SAAAC,OAAA,mCAEAmC,WAAA,eAAA,SAAA,SAAA,iBAAA,cAAA,SAAAjC,EAAA2C,EAAAC,EAAAC,GAEA7C,EAAAU,QAEAV,EAAA8C,MAAA,WACAH,EAAAI,GAAA,kBAyBA/C,EAAAgD,SAAA,WACAC,QAAAC,IAAA,WACAP,EAAAI,GAAA,mBL8GG,WACH,YMjJAlD,SAAAC,OAAA,oCAEAmC,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAAjC,EAAA4C,EAAAC,EAAAM,GAEAnD,EAAAU,QAEAV,EAAAgD,SAAA,WACAC,QAAAC,IAAA,wBACA,IAAAE,GAAA,8CACAR,GAAAS,QAAAC,GAAAF,GAAApD,EAAAU,KAAA6C,WAAAxC,KAAA,SAAAC,GACA,GAAAA,EAAAwC,KAAAC,QAAA,EAAA,CACAR,QAAAC,IAAA,kBAAAlC,EAAAwC,KAAAE,KAAA,GAAAH,SACAV,GAAAc,OACAC,MAAA,mDAEA,CACA,GAAAC,GAAA,qDACAjB,GAAAS,QAAAC,GAAAO,GAAA7D,EAAAU,KAAA6C,SAAAvD,EAAAU,KAAAoD,WAAA/C,KAAA,SAAAC,GACAiC,QAAAC,IAAA,kBAAAlC,EAAA+C,cACAd,QAAAC,IAAAlD,EAAAU,KAAA6C,SAAA,IAAAvD,EAAAU,KAAAoD,SACAjB,GAAAc,OACAC,MAAA,oBAAA5D,EAAAU,KAAA6C,SAAA,oBAAAvD,EAAAU,KAAAoD,SAAA,KAEAX,GAAAa,cACA,SAAA7C,GACAwC,MAAAxC,GACA8B,QAAAC,IAAA/B,OAGA,SAAAA,GACAwC,MAAAxC,GACA8B,QAAAC,IAAA/B,YNwJG,WACH,YOxLAtB,SAAAC,OAAA,oCAEAmC,WAAA,gBAAA,SAAA,SAAAjC","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['bluehacks.backend.crawlers']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']);\nangular.module('bluehacks.backend.services', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', [\"$scope\", \"HttpService\", function($scope, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n\n  return {\n    search: function search(keywords) {\n      return HttpService.get(baseUrl, {q: keywords});\n    }\n  }\n}])\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.services')\n\n.service('HttpService', [\"$scope\", \"$q\", \"$http\", function($scope, $q, $http) {\n  return {\n    get: function(url, data, timeout) {\n      var deferred = $q.defer();\n      $http({\n        url: url,\n        data: data,\n        method: 'GET',\n        timeout: timeout || 7500\n      }).then(function(result) {\n        if (!result || !result.data)\n          deferred.resolve({good: false, error: 'No response'});\n        else\n          deferred.resolve({good: true, result: result.data});\n      }, function(error) {\n        deferred.resolve({good: false, error: error});\n      });\n      return deferred.promise;\n    }\n  };\n}])\n\n\n.config([\"$httpProvider\", function HTTPConfig($httpProvider) {\n  // intercept $http get\n  // don't use application/json\n  $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n  $httpProvider.defaults.transformRequest.unshift(function(data) {\n    // encode JSON data upon request\n    var key, result = [];\n    if (typeof data === \"string\")\n      return data;\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join(\"&\");\n  });\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', ['bluehacks.backend.crawlers']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']);\nangular.module('bluehacks.backend.services', []);\n","angular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', function($scope, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n\n  return {\n    search: function search(keywords) {\n      return HttpService.get(baseUrl, {q: keywords});\n    }\n  }\n})\n","angular.module('bluehacks.backend.services')\n\n.service('HttpService', function($scope, $q, $http) {\n  return {\n    get: function(url, data, timeout) {\n      var deferred = $q.defer();\n      $http({\n        url: url,\n        data: data,\n        method: 'GET',\n        timeout: timeout || 7500\n      }).then(function(result) {\n        if (!result || !result.data)\n          deferred.resolve({good: false, error: 'No response'});\n        else\n          deferred.resolve({good: true, result: result.data});\n      }, function(error) {\n        deferred.resolve({good: false, error: error});\n      });\n      return deferred.promise;\n    }\n  };\n})\n\n\n.config(function HTTPConfig($httpProvider) {\n  // intercept $http get\n  // don't use application/json\n  $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n  $httpProvider.defaults.transformRequest.unshift(function(data) {\n    // encode JSON data upon request\n    var key, result = [];\n    if (typeof data === \"string\")\n      return data;\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join(\"&\");\n  });\n\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}