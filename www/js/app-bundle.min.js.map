{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/facebook-api-crawler.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","$cordovaSQLite","$ionicPlatform","user","getUserAccountDetails","console","debug","show","template","duration","hide","$on","query","execute","db","then","result","log","rows","item","username","firstname","lastname","occupation","error","$http","FacebookApiCrawlerService","GoogleApiCrawlerService","api","data","stuff","searchFacebook","mydata","q","keyword","type","results","warn","search","fullDetail","country","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","extend","loadCommunityFeats","get","index","milestones","milestone","config","FacebookProvider","facebookAppId","init","$q","Facebook","deferred","defer","resolve","reject","promise","DataService","goalsmap","when","playstore","http","goals","goal","baseUrl","reduce","setTimeout","JSON","stringify","dataToURI","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","method","$state","DataLoadingService","tabs","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","tiles","i","tile","tilenames","$ionicPopup","login","password","length","query2","query3","alert","register","$ionicHistory","query1","rowsAffected","clearCache","$ionicActionSheet"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['facebook']);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPlatform\", function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"FacebookApiCrawlerService\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.config([\"FacebookProvider\", function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n}])\n\n.service('FacebookApiCrawlerService', [\"$q\", \"HttpService\", \"Facebook\", function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"$q\", \"HttpService\", \"DataService\", function($q, HttpService, DataService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get('/json/goals.json')\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", \"$state\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n}]);\n}());\n","angular.module('bluehacks.backend', ['facebook']);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    });\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.config(function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n})\n\n.service('FacebookApiCrawlerService', function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function($q, HttpService, DataService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get('/json/goals.json')\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n});\n"]}