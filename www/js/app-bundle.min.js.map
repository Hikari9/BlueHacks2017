<<<<<<< HEAD
{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/crawlers/google-api-crawler.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","service","$scope","controller","createTile","index","url","getClass","current","this","click","$on","tiles","i","push","tilenames","$state","$cordovaSQLite","$ionicPopup","data","login","go","register","console","log","$ionicHistory","query1","execute","db","username","then","result","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","error"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,6BAAA,+BACAD,QAAAC,OAAA,8BAAA,+BACAD,QAAAC,OAAA,oCDKG,WACH,YERAD,SAAAC,OAAA,8BAEAC,QAAA,2BAAA,SAAA,SAAAC,GACA,eFaG,WACH,YGjBAH,SAAAC,OAAA,gCAEAG,WAAA,YAAA,SAAA,SAAAD,GAIA,QAAAE,GAAAC,GACA,OACAC,IAAA,UAAAD,EAAA,OACAE,SAAA,WACA,MAAA,OAAAL,EAAAM,QACA,YACAN,EAAAM,SAAAC,KACA,YAEA,gBAGAC,MAAA,WACA,MAAAR,EAAAM,QACAN,EAAAM,QAAAC,KAEAP,EAAAM,QAAA,OAnBAN,EAAAS,IAAA,mBAAA,WACAT,EAAAM,QAAA,OAsBAN,EAAAU,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EACAX,EAAAU,MAAAE,KAAAV,EAAAS,GAGAX,GAAAa,aACAb,EAAAa,UAAAD,KAAA,cACAZ,EAAAa,UAAAD,KAAA,eACAZ,EAAAa,UAAAD,KAAA,8BACAZ,EAAAa,UAAAD,KAAA,qBACAZ,EAAAa,UAAAD,KAAA,mBACAZ,EAAAa,UAAAD,KAAA,8BACAZ,EAAAa,UAAAD,KAAA,+BACAZ,EAAAa,UAAAD,KAAA,mCACAZ,EAAAa,UAAAD,KAAA,2CACAZ,EAAAa,UAAAD,KAAA,wBACAZ,EAAAa,UAAAD,KAAA,sCACAZ,EAAAa,UAAAD,KAAA,0CACAZ,EAAAa,UAAAD,KAAA,kBACAZ,EAAAa,UAAAD,KAAA,oBACAZ,EAAAa,UAAAD,KAAA,gBACAZ,EAAAa,UAAAD,KAAA,yCACAZ,EAAAa,UAAAD,KAAA,oCHuBG,WACH,YIxEAf,SAAAC,OAAA,mCAEAG,WAAA,eAAA,SAAA,SAAA,iBAAA,cAAA,SAAAD,EAAAc,EAAAC,EAAAC,GAEAhB,EAAAiB,QAEAjB,EAAAkB,MAAA,WACAJ,EAAAK,GAAA,kBAyBAnB,EAAAoB,SAAA,WACAC,QAAAC,IAAA,WACAR,EAAAK,GAAA,mBJ+EG,WACH,YKlHAtB,SAAAC,OAAA,oCAEAG,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAAD,EAAAe,EAAAC,EAAAO,GAEAvB,EAAAiB,QAEAjB,EAAAoB,SAAA,WACAC,QAAAC,IAAA,wBACA,IAAAE,GAAA,8CACAT,GAAAU,QAAAC,GAAAF,GAAAxB,EAAAiB,KAAAU,WAAAC,KAAA,SAAAC,GACA,GAAAA,EAAAC,KAAAC,QAAA,EAAA,CACAV,QAAAC,IAAA,kBAAAO,EAAAC,KAAAE,KAAA,GAAAL,SACAX,GAAAiB,OACAC,MAAA,mDAEA,CACA,GAAAC,GAAA,qDACApB,GAAAU,QAAAC,GAAAS,GAAAnC,EAAAiB,KAAAU,SAAA3B,EAAAiB,KAAAmB,WAAAR,KAAA,SAAAC,GACAR,QAAAC,IAAA,kBAAAO,EAAAQ,cACAhB,QAAAC,IAAAtB,EAAAiB,KAAAU,SAAA,IAAA3B,EAAAiB,KAAAmB,SACApB,GAAAiB,OACAC,MAAA,oBAAAlC,EAAAiB,KAAAU,SAAA,oBAAA3B,EAAAiB,KAAAmB,SAAA,KAEAb,GAAAe,cACA,SAAAC,GACAN,MAAAM,GACAlB,QAAAC,IAAAiB,OAGA,SAAAA,GACAN,MAAAM,GACAlB,QAAAC,IAAAiB,YLyHG,WACH,YMzJA1C,SAAAC,OAAA,oCAEAG,WAAA,gBAAA,SAAA,SAAAD","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\r\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\r\nangular.module('bluehacks.backend.services', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.crawlers')\r\n\r\n.service('GoogleApiCrawlerService', [\"$scope\", function($scope) {\r\n    return {};\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', [\"$scope\", function($scope) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null)\r\n          $scope.current = this;\r\n        else\r\n          $scope.current = null;\r\n      }\r\n    };\r\n  };\r\n  $scope.tiles = [];\r\n  for (var i = 1; i <= 17; ++i) {\r\n    $scope.tiles.push(createTile(i));\r\n  }\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\r\n\r\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          var alertPopup = $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\r\n            });\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })    \r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\r\n\r\n}]);\n}());\n","angular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\r\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\r\nangular.module('bluehacks.backend.services', []);\r\n","angular.module('bluehacks.backend.crawlers')\r\n\r\n.service('GoogleApiCrawlerService', function($scope) {\r\n    return {};\r\n});\r\n","angular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', function($scope) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null)\r\n          $scope.current = this;\r\n        else\r\n          $scope.current = null;\r\n      }\r\n    };\r\n  };\r\n  $scope.tiles = [];\r\n  for (var i = 1; i <= 17; ++i) {\r\n    $scope.tiles.push(createTile(i));\r\n  }\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n});\r\n","angular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n});\r\n","angular.module('bluehacks.registercontrollers', [])\r\n\r\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          var alertPopup = $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\r\n            });\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })    \r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n});\r\n","angular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', function($scope) {\r\n\r\n});\r\n"]}
=======
<<<<<<< HEAD
{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/crawlers/google-api-crawler.js","backend/services/http.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js","test/js/test.js"],"names":["angular","module","service","$scope","HttpService","baseUrl","search","keywords","get","q","$q","$http","url","data","timeout","deferred","defer","method","then","result","resolve","good","error","promise","controller","createTile","index","getClass","current","this","click","$on","tiles","i","push","$state","$cordovaSQLite","$ionicPopup","login","go","register","console","log","$ionicHistory","query1","execute","db","username","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","$ionicLoading","dataToURI","key","hasOwnProperty","encodeURIComponent","join","ctrl","results","show","mydata","fullDetail","keyword","country","warn","hide"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"$scope\", \"HttpService\", function($scope, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n\n  return {\n    search: function search(keywords) {\n      return HttpService.get(baseUrl, {q: keywords});\n    }\n  }\n}])\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$scope\", \"$q\", \"$http\", function($scope, $q, $http) {\n  return {\n    get: function(url, data, timeout) {\n      var deferred = $q.defer();\n      $http({\n        url: url,\n        data: data,\n        method: 'GET',\n        timeout: timeout || 7500\n      }).then(function(result) {\n        if (!result || !result.data)\n          deferred.resolve({good: false, error: 'No response'});\n        else\n          deferred.resolve({good: true, result: result.data});\n      }, function(error) {\n        deferred.resolve({good: false, error: error});\n      });\n      return deferred.promise;\n    }\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('TestCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", function($scope, $ionicLoading, $http) {\n\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n\n  $scope.data = {};\n  $scope.ctrl = {\n    results: '',\n    search: function() {\n      $ionicLoading.show();\n      var mydata = {\n        fullDetail: false,\n        q: $scope.data.keyword,\n        country: 'ph'\n      };\n      var url = 'http://localhost:3000/api/apps/' + '?' + dataToURI(mydata);\n      console.log(url);\n      $http({\n        method: 'GET',\n        url: url\n      }).then(function(result) {\n        console.log(result);\n        if (!result || !result.data)\n          return;\n        $scope.ctrl.results = result.data;\n      }, function(error) {\n        console.warn(error);\n      }).finally(function() {\n        $ionicLoading.hide();\n      });\n    }\n  };\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function($scope, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n\n  return {\n    search: function search(keywords) {\n      return HttpService.get(baseUrl, {q: keywords});\n    }\n  }\n})\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($scope, $q, $http) {\n  return {\n    get: function(url, data, timeout) {\n      var deferred = $q.defer();\n      $http({\n        url: url,\n        data: data,\n        method: 'GET',\n        timeout: timeout || 7500\n      }).then(function(result) {\n        if (!result || !result.data)\n          deferred.resolve({good: false, error: 'No response'});\n        else\n          deferred.resolve({good: true, result: result.data});\n      }, function(error) {\n        deferred.resolve({good: false, error: error});\n      });\n      return deferred.promise;\n    }\n  };\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n","angular.module('bluehacks.backend')\n\n.controller('TestCtrl', function($scope, $ionicLoading, $http) {\n\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n\n  $scope.data = {};\n  $scope.ctrl = {\n    results: '',\n    search: function() {\n      $ionicLoading.show();\n      var mydata = {\n        fullDetail: false,\n        q: $scope.data.keyword,\n        country: 'ph'\n      };\n      var url = 'http://localhost:3000/api/apps/' + '?' + dataToURI(mydata);\n      console.log(url);\n      $http({\n        method: 'GET',\n        url: url\n      }).then(function(result) {\n        console.log(result);\n        if (!result || !result.data)\n          return;\n        $scope.ctrl.results = result.data;\n      }, function(error) {\n        console.warn(error);\n      }).finally(function() {\n        $ionicLoading.hide();\n      });\n    }\n  };\n});\n"]}
=======
{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/crawlers/google-api-crawler.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","service","createTile","index","url","getClass","current","this","click","$on","tiles","i","push","$state","$cordovaSQLite","$ionicPopup","data","login","go","register","log","$ionicHistory","query1","execute","db","username","then","result","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","error"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,6BAAA,+BACAD,QAAAC,OAAA,8BAAA,+BACAD,QAAAC,OAAA,oCDKG,WACH,YERAD,SAAAC,OAAA,gCAEAC,WAAA,aAAA,SAAA,SAAAC,UFcG,WACH,YGjBAH,SAAAC,OAAA,kCAEAC,WAAA,eAAA,SAAA,eAAA,gBAAA,SAAAC,EAAAC,EAAAC,GACAF,EAAAG,sBAAA,WACAC,QAAAC,MAAA,4BACAH,EAAAI,MACAC,SAAA,2CACAC,SAAA,KAIA,IAAAC,GAAA,iBACAC,EAAA,WACAV,GAAAS,UAAAA,EACAT,EAAAU,SAAAA,EAEAR,EAAAS,cHuBG,WACH,YIxCAd,SAAAC,OAAA,8BAEAc,QAAA,2BAAA,SAAA,SAAAZ,GACA,eJ6CG,WACH,YKjDAH,SAAAC,OAAA,gCAEAC,WAAA,YAAA,SAAA,SAAAC,GAIA,QAAAa,GAAAC,GACA,OACAC,IAAA,UAAAD,EAAA,OACAE,SAAA,WACA,MAAA,OAAAhB,EAAAiB,QACA,YACAjB,EAAAiB,SAAAC,KACA,YAEA,gBAGAC,MAAA,WACA,MAAAnB,EAAAiB,QACAjB,EAAAiB,QAAAC,KAEAlB,EAAAiB,QAAA,OAnBAjB,EAAAoB,IAAA,mBAAA,WACApB,EAAAiB,QAAA,OAsBAjB,EAAAqB,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EACAtB,EAAAqB,MAAAE,KAAAV,EAAAS,ULuDG,WACH,YMpFAzB,SAAAC,OAAA,mCAEAC,WAAA,eAAA,SAAA,SAAA,iBAAA,cAAA,SAAAC,EAAAwB,EAAAC,EAAAC,GAEA1B,EAAA2B,QAEA3B,EAAA4B,MAAA,WACAJ,EAAAK,GAAA,kBAyBA7B,EAAA8B,SAAA,WACA1B,QAAA2B,IAAA,WACAP,EAAAK,GAAA,mBN2FG,WACH,YO9HAhC,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAAC,EAAAyB,EAAAC,EAAAM,GAEAhC,EAAA2B,QAEA3B,EAAA8B,SAAA,WACA1B,QAAA2B,IAAA,wBACA,IAAAE,GAAA,8CACAR,GAAAS,QAAAC,GAAAF,GAAAjC,EAAA2B,KAAAS,WAAAC,KAAA,SAAAC,GACA,GAAAA,EAAAC,KAAAC,QAAA,EAAA,CACApC,QAAA2B,IAAA,kBAAAO,EAAAC,KAAAE,KAAA,GAAAL,SACAV,GAAAgB,OACAC,MAAA,mDAEA,CACA,GAAAC,GAAA,qDACAnB,GAAAS,QAAAC,GAAAS,GAAA5C,EAAA2B,KAAAS,SAAApC,EAAA2B,KAAAkB,WAAAR,KAAA,SAAAC,GACAlC,QAAA2B,IAAA,kBAAAO,EAAAQ,cACA1C,QAAA2B,IAAA/B,EAAA2B,KAAAS,SAAA,IAAApC,EAAA2B,KAAAkB,SACAnB,GAAAgB,OACAC,MAAA,oBAAA3C,EAAA2B,KAAAS,SAAA,oBAAApC,EAAA2B,KAAAkB,SAAA,KAEAb,GAAAe,cACA,SAAAC,GACAN,MAAAM,GACA5C,QAAA2B,IAAAiB,OAGA,SAAAA,GACAN,MAAAM,GACA5C,QAAA2B,IAAAiB,YPqIG,WACH,YQrKAnD,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,SAAAC","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', [\"$scope\", function($scope) {\n    return {};\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', ['bluehacks.backend.crawlers', 'bluehacks.backend.services']);\nangular.module('bluehacks.backend.crawlers', ['bluehacks.backend.services']); // still dependent on services\nangular.module('bluehacks.backend.services', []);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.backend.crawlers')\n\n.service('GoogleApiCrawlerService', function($scope) {\n    return {};\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}
>>>>>>> viktor-1
>>>>>>> 93d310a86a2c9c0cfe9463ee364af6ebef0ef0fd
