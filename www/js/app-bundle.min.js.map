<<<<<<< HEAD
{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/facebook-api-crawler.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","$cordovaSQLite","$ionicPlatform","user","getUserAccountDetails","console","debug","show","template","duration","hide","$on","query","execute","db","then","result","log","rows","item","username","firstname","lastname","occupation","error","$http","FacebookApiCrawlerService","GoogleApiCrawlerService","api","data","stuff","searchFacebook","mydata","q","keyword","type","results","warn","search","fullDetail","country","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","extend","loadCommunityFeats","totalprogress","count","get","index","milestones","milestone","progress","config","FacebookProvider","facebookAppId","init","$q","Facebook","deferred","defer","resolve","reject","promise","DataService","goalsmap","when","playstore","http","goals","goal","baseUrl","reduce","setTimeout","JSON","stringify","dataToURI","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","method","$state","DataLoadingService","tabs","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","tiles","i","tile","tilenames","$ionicPopup","login","password","length","query2","query3","alert","register","$ionicHistory","query1","rowsAffected","clearCache","$ionicActionSheet"],"mappings":"CAAE,WACF,YCDAA,SAAAC,OAAA,qBAAA,gBDKG,WACH,YENAD,SAAAC,OAAA,gCAEAC,WAAA,aAAA,SAAA,SAAAC,UFYG,WACH,YGfAH,SAAAC,OAAA,kCAEAC,WAAA,eAAA,SAAA,eAAA,gBAAA,iBAAA,iBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAJ,EAAAK,QAEAL,EAAAM,sBAAA,WACAC,QAAAC,MAAA,4BACAN,EAAAO,MACAC,SAAA,2CACAC,SAAA,MAIAT,EAAAU,QAEAZ,EAAAa,IAAA,yBAAA,WACA,GAAAC,GAAA,yFACAX,GAAAY,QAAAC,GAAAF,GAAAG,KAAA,SAAAC,GACAX,QAAAY,IAAA,iBAAAD,EAAAE,KAAAC,KAAA,GAAAC,UACAtB,EAAAK,KAAAkB,UAAAL,EAAAE,KAAAC,KAAA,GAAAE,UACAvB,EAAAK,KAAAmB,SAAAN,EAAAE,KAAAC,KAAA,GAAAG,SACAxB,EAAAK,KAAAoB,WAAAP,EAAAE,KAAAC,KAAA,GAAAI,YACA,SAAAC,GACAnB,QAAAY,IAAAO,aHsBG,WACH,YI/CA7B,SAAAC,OAAA,qBAEAC,WAAA,eAAA,SAAA,gBAAA,QAAA,4BAAA,0BAAA,SAAAC,EAAAE,EAAAyB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,CACA7B,GAAA+B,QACA/B,EAAAgC,MAAAH,EAAAG,MACAhC,EAAAiC,eAAA,WACA/B,EAAAO,MACA,IAAAyB,IACAC,EAAAnC,EAAA+B,KAAAK,QACAC,KAAA,QAEAT,GAAAd,MAAAoB,GACAjB,KAAA,SAAAqB,GACA/B,QAAAY,IAAA,WAAAmB,KAFAV,SAIA,SAAAF,GACAnB,QAAAgC,KAAAb,KALAE,WAOA1B,EAAAU,OAEAZ,EAAAwC,OAAA,WACAtC,EAAAO,MACA,IAAAyB,IACAO,YAAA,EACAN,EAAAnC,EAAA+B,KAAAK,QACAM,QAAA,KAEAZ,GACAhB,MAAAoB,GACAjB,KAAA,SAAAqB,GACAtC,EAAA+B,KAAAO,QAAAA,EAAAA,QACA/B,QAAAY,IAAAmB,EACA,IAAAK,KACA,KAAA,GAAAC,KAAAN,GACAK,EAAAE,KAAAD,KAPAd,WAUA5B,EAAAU,aJqDG,WACH,YK5FAf,SAAAC,OAAA,qBAEAgD,QAAA,sBAAA,cAAA,0BAAA,SAAAC,EAAAlB,GAEA,QAAAmB,GAAAC,EAAAC,IAIA,QAAAC,GAAAF,EAAAC,IAIA,QAAAE,GAAAH,EAAAC,GACA,GAAAG,GAAAJ,EAAAK,IAEA,OADA/C,SAAAY,IAAA,aAAAkC,GACAxB,EAAAf,OACAqB,EAAAkB,IACApC,KAAA,SAAAsC,GAEA,GAAAjB,GAAAiB,EAAAjB,OACA/B,SAAAY,IAAA,WAAAoC,GACA1D,QAAA2D,QAAAlB,EAAA,SAAAmB,GACA,GAAA1B,IACA2B,GAAAD,EAAAE,MACAC,IAAAH,EAAAI,aACAC,KAAAL,EAAAK,KACAC,MAAAN,EAAAM,MACAC,MAAAP,EAAAO,MACAC,QAAAR,EAAAQ,QACAC,MAAAT,EAAAS,MAEArE,SAAAsE,OAAApC,EAAA0B,GACAP,EAAAL,KAAAd,GACAxB,QAAAY,IAAA,4BAAAY,OAKA,QAAAqC,GAAAnB,EAAAC,GACA,GAAAmB,GAAA,EACAC,EAAA,CACA,OAAAvB,GAAAwB,IAAA,oBAAAtD,KAAA,SAAAqB,GACAzC,QAAA2D,QAAAlB,EAAAW,EAAAuB,MAAA,GAAAC,WAAA,SAAAC,EAAAF,GACAjE,QAAAY,IAAA,cAAA8B,EAAAK,KAAA,IAAAoB,GACAA,EAAAF,MAAAA,EAAA,EACAH,GAAAK,EAAAC,SACAL,IACArB,EAAAoB,iBAAAA,EAAAC,EAAA,IAAA,GAEApB,EAAAL,KAAA6B,OAOA,OACA1B,YAAAA,EACAG,yBAAAA,EACAC,kBAAAA,EACAgB,mBAAAA,SLmGG,WACH,YMhKAvE,SAAAC,OAAA,qBAEA8E,QAAA,mBAAA,SAAAC,GACA,GAAAC,GAAA,iBACAD,GAAAE,KAAAD,MAGAhC,QAAA,6BAAA,KAAA,cAAA,WAAA,SAAAkC,EAAAjC,EAAAkC,GAEA,QAAAnE,GAAAiB,GACAxB,QAAAY,IAAA,mBAAAY,GACAxB,QAAAY,IAAA8D,EACA,IAAAC,GAAAF,EAAAG,OAOA,OANAF,GAAAnD,IAAA,UAAAC,EAAA,SAAAwB,GACAA,IAAAA,EAAA7B,MACAwD,EAAAE,QAAA7B,GAEA2B,EAAAG,OAAA9B,KAEA2B,EAAAI,QAEA,OACAxE,MAAAA,SNsKG,WACH,YO7LAjB,SAAAC,OAAA,qBAEAgD,QAAA,2BAAA,KAAA,cAAA,cAAA,SAAAkC,EAAAjC,EAAAwC,GAGA,QAAAzE,GAAAiB,GAEA,GAAAwD,EAAAC,SAAA,CACA,GAAAtE,GAAAqE,EAAAC,SAAAzD,EAAAI,EAEA,OADA5B,SAAAY,IAAA,kBAAAD,GACA8D,EAAAS,KAAAvE,EAAAwE,WAEA,GAAAR,GAAAF,EAAAG,OAaA,OAZAQ,GACApB,IAAA,oBACAtD,KAAA,SAAA2E,GACArF,QAAAY,IAAA,UAAAyE,GACAL,EAAAK,MAAAA,CACA,IAAAJ,KACA3F,SAAA2D,QAAAoC,EAAA,SAAAC,GACAL,EAAAK,EAAAvC,MAAAuC,IAEAN,EAAAC,SAAAA,EACAN,EAAAE,QAAAI,EAAAzD,EAAAI,GAAAuD,aAEAR,EAAAI,QAEA,QAAA9C,GAAAa,GAEA,MADA9C,SAAAY,IAAA,YAAA2E,EAAAzC,IACAvC,GAAAqB,EAAAkB,IA1BA,GAAAyC,GAAA,kCACAH,EAAA5C,CA2BA,QACAjC,MAAAA,EACA0B,OAAAA,EACAR,MAAA,WACAzB,QAAAY,IAAA,YACA4B,EAAAwB,IAAA,oBACAtD,KAAA,SAAA2E,GAEA,MADArF,SAAAY,IAAA,aACAyE,EAAAG,OAAA,SAAAT,EAAAO,GACA,MAAAP,GAAArE,KAAA,WACA,MAAAH,IACAqB,EAAA0D,EAAAvC,KACAb,YAAA,MAEAxB,KAAA,SAAAqB,GACAuD,EAAAH,UAAApD,EACA/B,QAAAY,IAAA,mBAAAmB,EACA,IAAA4C,GAAAF,EAAAG,OAIA,OAHAa,YAAA,WACAd,EAAAE,SAAA,IACA,KACAF,EAAAI,UAZAA,SAaA,SAAA5D,GACAnB,QAAAgC,KAAAb,MAEAsD,EAAAS,QAAAxE,KAAA,WACAV,QAAAY,IAAA8E,KAAAC,UAAAN,gBPsMG,WACH,YQhQA/F,SAAAC,OAAA,qBAEAgD,QAAA,eAAA,KAAA,QAAA,SAAAkC,EAAArD,GACA,QAAAwE,GAAApE,GACA,GAAAa,GAAA1B,IACA,KAAA0B,IAAAb,GACAA,EAAAqE,eAAAxD,IACA1B,EAAA2B,KAAAwD,mBAAAzD,GAAA,IAAAyD,mBAAAtE,EAAAa,IACA,OAAA1B,GAAAoF,KAAA,KAEA,QAAA/B,GAAAX,EAAA7B,EAAAwE,GACA,GAAAC,GAAA5C,EAAA,IAAAuC,EAAApE,GACAmD,EAAAF,EAAAG,OAaA,OAZAxD,IACAiC,IAAA4C,EACAC,OAAA,MACAF,QAAAA,GAAA,OACAtF,KAAA,SAAAC,GACAA,GAAAA,EAAAa,KAGAmD,EAAAE,QAAAlE,EAAAa,MAFAmD,EAAAG,OAAA,gBAGA,SAAA3D,GACAwD,EAAAG,OAAA3D,KAEAwD,EAAAI,QAEA,OACAa,UAAAA,EACA5B,IAAAA,SRsQG,WACH,YSpSA1E,SAAAC,OAAA,+BAEAC,WAAA,YAAA,SAAA,SAAA,eAAA,cAAA,qBAAA,SAAAC,EAAA0G,EAAAzG,EAAAsF,EAAAoB,GAEA3G,EAAA+B,QACA/B,EAAA4G,QAEA5G,EAAAa,IAAA,yBAAA,WACA,MAAA0E,GAAAxD,MAAAwD,EAAAxD,KAAAuB,MAEAzD,QAAAsE,OAAAnE,EAAA+B,KAAAwD,EAAAxD,MAEAlC,QAAAsE,OAAAnE,EAAA4G,MACAC,UACAC,wBACAC,iBACAC,oBAGAL,EAAA3D,YAAAhD,EAAA+B,KAAA/B,EAAA4G,KAAAC,QACAF,EAAAxD,yBAAAnD,EAAA+B,KAAA/B,EAAA4G,KAAAE,sBACAH,EAAAvD,kBAAApD,EAAA+B,KAAA/B,EAAA4G,KAAAG,eACA9F,KAAA,WACAV,QAAAY,IAAAnB,EAAA4G,YAEAD,GAAAvC,mBAAApE,EAAA+B,KAAA/B,EAAA4G,KAAAI,iBAhBAN,EAAAO,GAAA,yBT4TG,WACH,YUtUApH,SAAAC,OAAA,gCAEAC,WAAA,YAAA,SAAA,QAAA,SAAA,cAAA,SAAAC,EAAA2B,EAAA+E,EAAAnB,GAIA,QAAA2B,GAAA1C,GACA,OACAZ,IAAA,UAAAY,EAAA,OACAA,MAAAA,EAAAH,cAAA,EACA8C,SAAA,WACA,MAAA,aAEAC,MAAA,WACA,MAAApH,EAAAqH,SAGA9B,EAAAxD,KAAAuF,KACA/G,QAAAY,IAAA,OAAAoE,EAAAxD,MACA2E,EAAAO,GAAA,kBAIAjH,EAAAqH,QAAA,OApBArH,EAAAa,IAAA,mBAAA,WACAb,EAAAqH,QAAA,OAwBA1F,EAAA4C,IAAA,oBACAtD,KAAA,SAAAqB,GACA,GAAAsD,GAAAtD,EAAAP,IACA/B,GAAAuH,QACA,KAAA,GAAAC,GAAA,EAAAA,GAAA,KAAAA,EAAA,CACA,GAAAC,GAAAP,EAAAM,EACAC,GAAAnE,KAAAsC,EAAA4B,EAAA,GAAAlE,KACAtD,EAAAuH,MAAA1E,KAAA4E,MAIAzH,EAAA0H,aACA1H,EAAA0H,UAAA7E,KAAA,cACA7C,EAAA0H,UAAA7E,KAAA,eACA7C,EAAA0H,UAAA7E,KAAA,8BACA7C,EAAA0H,UAAA7E,KAAA,qBACA7C,EAAA0H,UAAA7E,KAAA,mBACA7C,EAAA0H,UAAA7E,KAAA,8BACA7C,EAAA0H,UAAA7E,KAAA,+BACA7C,EAAA0H,UAAA7E,KAAA,mCACA7C,EAAA0H,UAAA7E,KAAA,2CACA7C,EAAA0H,UAAA7E,KAAA,wBACA7C,EAAA0H,UAAA7E,KAAA,sCACA7C,EAAA0H,UAAA7E,KAAA,0CACA7C,EAAA0H,UAAA7E,KAAA,kBACA7C,EAAA0H,UAAA7E,KAAA,oBACA7C,EAAA0H,UAAA7E,KAAA,gBACA7C,EAAA0H,UAAA7E,KAAA,yCACA7C,EAAA0H,UAAA7E,KAAA,oCV4UG,WACH,YWrYAhD,SAAAC,OAAA,mCAEAC,WAAA,eAAA,SAAA,SAAA,gBAAA,iBAAA,cAAA,SAAAC,EAAA0G,EAAAxG,EAAAC,EAAAwH,GAEA3H,EAAA+B,QAEA/B,EAAA4H,MAAA,WACA1H,EAAAO,MACA,IAAAK,GAAA,wDACAX,GAAAY,QAAAC,GAAAF,GAAAd,EAAA+B,KAAAT,SAAAtB,EAAA+B,KAAA8F,WAAA5G,KAAA,SAAAC,GACA,GAAAA,EAAAE,KAAA0G,OAAA,EAAA,CACA,GAAAC,GAAA,0BACA5H,GAAAY,QAAAC,GAAA+G,EACA,IAAAC,GAAA,oDACA7H,GAAAY,QAAAC,GAAAgH,GAAAhI,EAAA+B,KAAAT,WACAf,QAAAY,IAAA,eAAAD,EAAAE,KAAAC,KAAA,GAAAE,UACAoG,GAAAM,OACAjE,MAAA,YAAA9C,EAAAE,KAAAC,KAAA,GAAAC,UAEAoF,GAAAO,GAAA,qBACA,CACA1G,QAAAY,IAAA,gBACAwG,GAAAM,OACAjE,MAAA,wBAGA9D,EAAAU,QACA,SAAAc,GACAnB,QAAAY,IAAAO,GACAxB,EAAAU,UAIAZ,EAAAkI,SAAA,WACAxB,EAAAO,GAAA,mBX4YG,WACH,YY/aApH,SAAAC,OAAA,oCACAC,WAAA,gBAAA,SAAA,iBAAA,cAAA,gBAAA,SAAA,SAAAC,EAAAG,EAAAwH,EAAAQ,EAAAzB,GAEA1G,EAAA+B,QAEA/B,EAAAkI,SAAA,WACA,GAAAE,GAAA,8CACAjI,GAAAY,QAAAC,GAAAoH,GAAApI,EAAA+B,KAAAT,WAAAL,KAAA,SAAAC,GACA,GAAAA,EAAAE,KAAA0G,QAAA,EAEA,MADAvH,SAAAY,IAAA,kBAAAD,EAAAE,KAAAC,KAAA,GAAAC,UACAqG,EAAAM,OACAjE,MAAA,8CAGA,IAAA+D,GAAA,+FACA5H,GAAAY,QAAAC,GAAA+G,GAAA/H,EAAA+B,KAAAT,SAAAtB,EAAA+B,KAAA8F,SAAA7H,EAAA+B,KAAAR,UAAAvB,EAAA+B,KAAAP,SAAAxB,EAAA+B,KAAAN,aAAAR,KAAA,SAAAC,GACAX,QAAAY,IAAA,kBAAAD,EAAAmH,cACA9H,QAAAY,IAAAnB,EAAA+B,KAAAT,SAAA,IAAAtB,EAAA+B,KAAA8F,UACAF,EAAAM,OACAjE,MAAA,oBAAAhE,EAAA+B,KAAAT,SAAA,0BAGAL,KAAA,WACAyF,EAAAO,GAAA,aAEAkB,EAAAG,cACA,SAAA5G,GACAuG,MAAA,SAAAvG,GACAnB,QAAAY,IAAAO,MAGA,SAAAA,GACAuG,MAAA,SAAAvG,GACAnB,QAAAY,IAAAO,YZsbG,WACH,YaxdA7B,SAAAC,OAAA,oCAEAC,WAAA,gBAAA,SAAA,iBAAA,oBAAA,gBAAA,SAAAC,EAAAG,EAAAoI,EAAAJ,GACAnI,EAAAK,QAEAL,EAAAa,IAAA,yBAAA,WACA,GAAAC,GAAA,yFACAX,GAAAY,QAAAC,GAAAF,GAAAG,KAAA,SAAAC,GACAX,QAAAY,IAAAD,EAAAE,KAAAC,KAAA,IACArB,EAAAK,KAAAkB,UAAAL,EAAAE,KAAAC,KAAA,GAAAE,UACAvB,EAAAK,KAAAmB,SAAAN,EAAAE,KAAAC,KAAA,GAAAG,SACAxB,EAAAK,KAAAiB,SAAAJ,EAAAE,KAAAC,KAAA,GAAAC,SACAtB,EAAAK,KAAAoB,WAAAP,EAAAE,KAAAC,KAAA,GAAAI,YACA,SAAAC,GACAnB,QAAAY,IAAAO","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['facebook']);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPlatform\", function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"FacebookApiCrawlerService\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n\t\tvar totalprogress = 0;\n\t\tvar count = 0;\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n\t\t\t\t totalprogress += milestone.progress;\n\t\t\t\t count++;\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\n\n        resultsCollection.push(milestone);\n\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.config([\"FacebookProvider\", function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n}])\n\n.service('FacebookApiCrawlerService', [\"$q\", \"HttpService\", \"Facebook\", function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"$q\", \"HttpService\", \"DataService\", function($q, HttpService, DataService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get('/json/goals.json')\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n\t\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index, totalprogress: 0,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", \"$state\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n}]);\n}());\n","angular.module('bluehacks.backend', ['facebook']);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    });\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n\t\tvar totalprogress = 0;\n\t\tvar count = 0;\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n\t\t\t\t totalprogress += milestone.progress;\n\t\t\t\t count++;\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\n\n        resultsCollection.push(milestone);\n\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.config(function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n})\n\n.service('FacebookApiCrawlerService', function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function($q, HttpService, DataService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get('/json/goals.json')\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n\t\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index, totalprogress: 0,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n});\n"]}
=======
{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/facebook-api-crawler.js","backend/js/google-api-crawler.js","backend/js/http.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","$cordovaSQLite","$ionicPlatform","user","getUserAccountDetails","console","debug","show","template","duration","hide","$on","query","execute","db","then","result","log","rows","item","username","firstname","lastname","occupation","error","$state","DataService","DataLoadingService","dataToURI","data","key","hasOwnProperty","push","encodeURIComponent","join","tabs","encode","name","q","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","loadFbPages","loadKickstarterCharities","loadPlayStoreApps","loadCommunityFeats","go","$http","GOALS","createTile","index","url","totalprogress","getClass","click","current","this","get","results","goals","tiles","i","tile","tilenames","$ionicPopup","login","password","length","query2","query3","alert","title","register","service","window","cordova","FacebookApiCrawlerService","GoogleApiCrawlerService","api","stuff","searchFacebook","mydata","keyword","type","warn","search","fullDetail","country","res","HttpService","model","resultsCollection","keywords","response","forEach","app","id","appId","playstoreUrl","icon","price","summary","score","count","milestones","milestone","progress","config","FacebookProvider","facebookAppId","init","$q","Facebook","deferred","defer","resolve","reject","promise","goalsmap","when","playstore","http","goal","baseUrl","reduce","setTimeout","JSON","stringify","timeout","requestURI","method","$ionicHistory","query1","rowsAffected","clearCache","$ionicActionSheet"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['facebook']);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPlatform\", function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\tfunction dataToURI(data) {\n\t\tvar key, result = [];\n\t\tfor (key in data)\n\t\t\tif (data.hasOwnProperty(key))\n\t\t\t\tresult.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n\t\treturn result.join('&');\n\t};\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\t$scope.encode = function(name) {\n\t\treturn \"https://facebook.com/search/pages/?\" + dataToURI({q: name});\n\t};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"GOALS\", \"DataService\", function($scope, $http, $state, GOALS, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: 'img/' + index + '.png',\n      index: index, totalprogress: 0,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get(GOALS.url())\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n.service('GOALS', function() {\n  return {\n    url: function() {\n      return window.cordova ? '../www/json/goals.json' : '/json/goals.json';\n    }\n  };\n})\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"FacebookApiCrawlerService\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", \"GOALS\", function(HttpService, GoogleApiCrawlerService, GOALS) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n\t\tvar totalprogress = 0;\n\t\tvar count = 0;\n    return HttpService.get(GOALS.url()).then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n\t\t\t\t totalprogress += milestone.progress;\n\t\t\t\t count++;\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\n\n        resultsCollection.push(milestone);\n\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.config([\"FacebookProvider\", function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n}])\n\n.service('FacebookApiCrawlerService', [\"$q\", \"HttpService\", \"Facebook\", function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"$q\", \"HttpService\", \"DataService\", \"GOALS\", function($q, HttpService, DataService, GOALS) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get(GOALS.url())\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get(GOALS.url())\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", \"$state\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n}]);\n}());\n","angular.module('bluehacks.backend', ['facebook']);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\n\n        $scope.user = {}\n\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            $ionicLoading.hide();\n        }\n        $scope.$on('$ionicView.beforeEnter', function(){\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n            $cordovaSQLite.execute(db, query).then(function(result){\n            console.log(\"Current user: \" + result.rows.item(0).username);\n            $scope.user.firstname = result.rows.item(0).firstname;\n            $scope.user.lastname = result.rows.item(0).lastname;\n            $scope.user.occupation = result.rows.item(0).occupation;\n          }, function(error){\n                  console.log(error);\n          }) \n        })\n    });\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\tfunction dataToURI(data) {\n\t\tvar key, result = [];\n\t\tfor (key in data)\n\t\t\tif (data.hasOwnProperty(key))\n\t\t\t\tresult.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n\t\treturn result.join('&');\n\t};\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\t$scope.encode = function(name) {\n\t\treturn \"https://facebook.com/search/pages/?\" + dataToURI({q: name});\n\t};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, GOALS, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: 'img/' + index + '.png',\n      index: index, totalprogress: 0,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get(GOALS.url())\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $ionicLoading.show();\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(db, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('sidemenu.home');\n          } else{\n            console.log(\"NO ROWS EXIST\");\n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n\t\t\t\t\t$ionicLoading.hide();\n      }, function(error){\n          console.log(error);\n\t\t\t\t\t$ionicLoading.hide();\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.backend')\n.service('GOALS', function() {\n  return {\n    url: function() {\n      return window.cordova ? '../www/json/goals.json' : '/json/goals.json';\n    }\n  };\n})\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService, GOALS) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      console.log(\"Response\", response);\n      angular.forEach(results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        angular.extend(data, app);\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n\t\tvar totalprogress = 0;\n\t\tvar count = 0;\n    return HttpService.get(GOALS.url()).then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n\t\t\t\t totalprogress += milestone.progress;\n\t\t\t\t count++;\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\n\n        resultsCollection.push(milestone);\n\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.config(function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n})\n\n.service('FacebookApiCrawlerService', function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function($q, HttpService, DataService, GOALS) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    // find map in json file\n    if (DataService.goalsmap) {\n      var result = DataService.goalsmap[data.q];\n      console.log(\"Goals (cache): \", result);\n      return $q.when(result.playstore);\n    }\n    var deferred = $q.defer();\n    http\n    .get(GOALS.url())\n    .then(function(goals) {\n      console.log(\"Goals: \", goals);\n      DataService.goals = goals;\n      var goalsmap = {};\n      angular.forEach(goals, function(goal) {\n        goalsmap[goal.name] = goal;\n      });\n      DataService.goalsmap = goalsmap;\n      deferred.resolve(goalsmap[data.q].playstore);\n    });\n    return deferred.promise;\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return query({q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get(GOALS.url())\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(\"Error!\", error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\n\t$scope.user = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function(){\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0))\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n\t})\n});\n"]}
>>>>>>> 459f8f28731c145cc0f76374a526ff107e52670b
