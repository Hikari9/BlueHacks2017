{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/crawlers/google-api-crawler.js","backend/services/http.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js","test/js/test.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","service","HttpService","baseUrl","search","keywords","get","q","$q","$http","url","data","timeout","deferred","defer","method","then","result","resolve","good","error","promise","createTile","index","getClass","current","this","click","$on","tiles","i","push","tilenames","$state","$cordovaSQLite","$ionicPopup","login","go","register","log","$ionicHistory","query1","execute","db","username","rows","length","item","alert","title","query2","password","rowsAffected","clearCache","dataToURI","key","hasOwnProperty","encodeURIComponent","join","ctrl","results","mydata","fullDetail","keyword","country","warn"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\r\n        \r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            var firstname = \"Viktor Mikhael\";\r\n            var lastname = \"Dela Cruz\";\r\n            $scope.firstname = firstname;\r\n            $scope.lastname = lastname;\r\n\r\n            $ionicLoading.hide();\r\n        }\r\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', [\"$scope\", \"HttpService\", function($scope, HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n\r\n  return {\r\n    search: function search(keywords) {\r\n      return HttpService.get(baseUrl, {q: keywords});\r\n    }\r\n  }\r\n}])\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('HttpService', [\"$scope\", \"$q\", \"$http\", function($scope, $q, $http) {\r\n  return {\r\n    get: function(url, data, timeout) {\r\n      var deferred = $q.defer();\r\n      $http({\r\n        url: url,\r\n        data: data,\r\n        method: 'GET',\r\n        timeout: timeout || 7500\r\n      }).then(function(result) {\r\n        if (!result || !result.data)\r\n          deferred.resolve({good: false, error: 'No response'});\r\n        else\r\n          deferred.resolve({good: true, result: result.data});\r\n      }, function(error) {\r\n        deferred.resolve({good: false, error: error});\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', [\"$scope\", function($scope) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null)\r\n          $scope.current = this;\r\n        else\r\n          $scope.current = null;\r\n      }\r\n    };\r\n  };\r\n  $scope.tiles = [];\r\n  for (var i = 1; i <= 17; ++i) {\r\n    $scope.tiles.push(createTile(i));\r\n  }\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\r\n\r\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          var alertPopup = $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\r\n            });\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })    \r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.controller('TestCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", function($scope, $ionicLoading, $http) {\r\n\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n\r\n  $scope.data = {};\r\n  $scope.ctrl = {\r\n    results: '',\r\n    search: function() {\r\n      $ionicLoading.show();\r\n      var mydata = {\r\n        fullDetail: false,\r\n        q: $scope.data.keyword,\r\n        country: 'ph'\r\n      };\r\n      var url = 'http://localhost:3000/api/apps/' + '?' + dataToURI(mydata);\r\n      console.log(url);\r\n      $http({\r\n        method: 'GET',\r\n        url: url\r\n      }).then(function(result) {\r\n        console.log(result);\r\n        if (!result || !result.data)\r\n          return;\r\n        $scope.ctrl.results = result.data;\r\n      }, function(error) {\r\n        console.warn(error);\r\n      }).finally(function() {\r\n        $ionicLoading.hide();\r\n      });\r\n    }\r\n  };\r\n}]);\n}());\n","angular.module('bluehacks.backend', []);\r\n","angular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', function ($scope) {\r\n        \r\n});\r\n","angular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            var firstname = \"Viktor Mikhael\";\r\n            var lastname = \"Dela Cruz\";\r\n            $scope.firstname = firstname;\r\n            $scope.lastname = lastname;\r\n\r\n            $ionicLoading.hide();\r\n        }\r\n    });\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', function($scope, HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n\r\n  return {\r\n    search: function search(keywords) {\r\n      return HttpService.get(baseUrl, {q: keywords});\r\n    }\r\n  }\r\n})\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('HttpService', function($scope, $q, $http) {\r\n  return {\r\n    get: function(url, data, timeout) {\r\n      var deferred = $q.defer();\r\n      $http({\r\n        url: url,\r\n        data: data,\r\n        method: 'GET',\r\n        timeout: timeout || 7500\r\n      }).then(function(result) {\r\n        if (!result || !result.data)\r\n          deferred.resolve({good: false, error: 'No response'});\r\n        else\r\n          deferred.resolve({good: true, result: result.data});\r\n      }, function(error) {\r\n        deferred.resolve({good: false, error: error});\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n});\r\n","angular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', function($scope) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      getClass: function() {\r\n        if ($scope.current == null) {\r\n          return \"tile-show\";\r\n        } else if ($scope.current != this) {\r\n          return \"tile-hide\";\r\n        } else {\r\n          return \"tile-current\";\r\n        }\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null)\r\n          $scope.current = this;\r\n        else\r\n          $scope.current = null;\r\n      }\r\n    };\r\n  };\r\n  $scope.tiles = [];\r\n  for (var i = 1; i <= 17; ++i) {\r\n    $scope.tiles.push(createTile(i));\r\n  }\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n});\r\n","angular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $state.go('sidemenu.home');\r\n\t\t/*console.log(\"CLICKED LOGIN!\");\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $state.go('landing');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })*/\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\tconsole.log(\"clicked\");\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n});\r\n","angular.module('bluehacks.registercontrollers', [])\r\n\r\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n    console.log(\"SHOW ME THAT YOU LIVE\")\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          var alertPopup = $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\r\n            });\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      })    \r\n        }\r\n      }, function(error){\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n});\r\n","angular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', function($scope) {\r\n\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.controller('TestCtrl', function($scope, $ionicLoading, $http) {\r\n\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n\r\n  $scope.data = {};\r\n  $scope.ctrl = {\r\n    results: '',\r\n    search: function() {\r\n      $ionicLoading.show();\r\n      var mydata = {\r\n        fullDetail: false,\r\n        q: $scope.data.keyword,\r\n        country: 'ph'\r\n      };\r\n      var url = 'http://localhost:3000/api/apps/' + '?' + dataToURI(mydata);\r\n      console.log(url);\r\n      $http({\r\n        method: 'GET',\r\n        url: url\r\n      }).then(function(result) {\r\n        console.log(result);\r\n        if (!result || !result.data)\r\n          return;\r\n        $scope.ctrl.results = result.data;\r\n      }, function(error) {\r\n        console.warn(error);\r\n      }).finally(function() {\r\n        $ionicLoading.hide();\r\n      });\r\n    }\r\n  };\r\n});\r\n"]}