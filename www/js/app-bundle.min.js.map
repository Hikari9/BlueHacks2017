{"version":3,"sources":["app-bundle.min.js","backend/module.js","backend/js/backend.js","backend/js/google-api-crawler.js","backend/js/http.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$ionicLoading","$http","GoogleApiCrawlerService","api","data","search","show","mydata","fullDetail","q","keyword","country","query","then","results","console","log","res","key","push","hide","service","HttpService","http","get","baseUrl","keywords","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","url","timeout","deferred","defer","method","resolve","reject","error","promise","createTile","index","getClass","current","this","click","$on","tiles","i","$state","$cordovaSQLite","$ionicPopup","login","go","register","$ionicHistory","query1","execute","db","username","rows","length","item","alert","title","query2","password","rowsAffected","clearCache"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var deferred = $q.defer();\n    $http({\n      url: url + '?' + dataToURI(data),\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var deferred = $q.defer();\n    $http({\n      url: url + '?' + dataToURI(data),\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n      },\n      click: function() {\n        if ($scope.current == null)\n          $scope.current = this;\n        else\n          $scope.current = null;\n      }\n    };\n  };\n  $scope.tiles = [];\n  for (var i = 1; i <= 17; ++i) {\n    $scope.tiles.push(createTile(i));\n  }\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){ \n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          var alertPopup = $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){ \n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + '] with password [' + $scope.data.password + ']'\n            });\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })    \n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}