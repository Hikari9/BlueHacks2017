{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/facebook-api-crawler.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","$http","FacebookApiCrawlerService","GoogleApiCrawlerService","api","data","stuff","searchFacebook","mydata","q","keyword","type","query","then","results","log","error","warn","search","fullDetail","country","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","get","index","milestones","milestone","config","FacebookProvider","facebookAppId","init","$q","Facebook","deferred","defer","resolve","reject","promise","http","baseUrl","goals","reduce","goal","playstore","setTimeout","when","JSON","stringify","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","method","$state","DataService","DataLoadingService","tabs","$on","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","tiles","i","tile","tilenames","$cordovaSQLite","$ionicPopup","login","register","$ionicHistory","query1","execute","db","username","rows","length","item","alert","query2","password","rowsAffected","clearCache"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', ['facebook']);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"FacebookApiCrawlerService\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.config([\"FacebookProvider\", function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n}])\n\n.service('FacebookApiCrawlerService', [\"$q\", \"HttpService\", \"Facebook\", function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"$q\", \"HttpService\", function($q, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', ['facebook']);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, FacebookApiCrawlerService, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.stuff = GoogleApiCrawlerService.stuff;\n  $scope.searchFacebook = function() {\n    $ionicLoading.show();\n    var mydata = {\n      q: $scope.data.keyword,\n      type: 'topic'\n    };\n    FacebookApiCrawlerService.query(mydata)\n    .then(function(results) {\n      console.log('Facebook', results);\n    })\n    .catch(function(error) {\n      console.warn(error);\n    })\n    .finally($ionicLoading.hide);\n  };\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, resultsCollection) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, resultsCollection) {\n\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, resultsCollection) {\n    return HttpService.get('/json/goals.json').then(function(results) {\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\n        console.log('Milestone (' + model.name + ')', milestone);\n         milestone.index = index + 1;\n        resultsCollection.push(milestone);\n\n      });\n    });\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.config(function(FacebookProvider) {\n  var facebookAppId = \"456621651128777\";\n  FacebookProvider.init(facebookAppId);\n})\n\n.service('FacebookApiCrawlerService', function($q, HttpService, Facebook) {\n  var http = HttpService;\n  function query(data) {\n    console.log('Querying data...', data);\n    console.log(Facebook);\n    var deferred = $q.defer();\n    Facebook.api('/search', data, function(response) {\n      if (response && !response.error)\n        deferred.resolve(response);\n      else\n        deferred.reject(response);\n    });\n    return deferred.promise;\n  };\n  return {\n    query: query\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function($q, HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    console.log(\"Search: \", [baseUrl, keywords]);\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search,\n    stuff: function() {\n      console.log('Stuffing');\n      HttpService.get('/json/goals.json')\n      .then(function(goals) {\n        console.log('got goals');\n        return goals.reduce(function(promise, goal) {\n          return promise.then(function() {\n            return query({\n              q: goal.name,\n              fullDetail: false\n            });\n        }).then(function(results) {\n            goal.playstore = results;\n            console.log(\"Processed goal: \", results);\n            var deferred = $q.defer();\n            setTimeout(function() {\n              deferred.resolve(true);\n            }, 1000);\n            return deferred.promise;\n          }).catch(function(error) {\n            console.warn(error);\n          });\n        }, $q.when()).then(function() {\n          console.log(JSON.stringify(goals));\n        });\n      })\n    }\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      index: index,\n      getClass: function() {\n        return \"tile-show\";\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}