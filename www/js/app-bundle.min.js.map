<<<<<<< HEAD
{"version":3,"sources":["app-bundle.min.js","backend/module.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","home/js/home.js","goal/js/goal.js","landing/js/landing.js","about/js/about.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","$http","GoogleApiCrawlerService","api","data","search","mydata","fullDetail","q","keyword","country","query","then","results","log","res","key","push","service","loadFbPages","model","loadKickstarterCharities","loadPlayStoreApps","resultsCollection","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","HttpService","http","get","baseUrl","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","error","promise","$state","DataService","createTile","index","getClass","click","current","this","go","$on","goals","tiles","i","tile","tilenames","DataLoadingService","tabs","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","$cordovaSQLite","$ionicPopup","login","register","$ionicHistory","query1","execute","db","username","rows","length","item","alert","query2","password","rowsAffected","clearCache"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"GoogleApiCrawlerService\", function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", function($scope) {\n\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\t/*console.log(\"CLICKED LOGIN!\");\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\"; //caution when using * if you want to be specific\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n            $state.go('landing');\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })*/\n\t}\n\n\t$scope.register = function(){\n\t\tconsole.log(\"clicked\");\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n    console.log(\"SHOW ME THAT YOU LIVE\")\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope) {\n\n});\n"]}
=======
{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","goal/js/goal.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","getUserAccountDetails","console","debug","show","template","duration","firstname","lastname","hide","$state","DataService","DataLoadingService","data","tabs","$on","name","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","loadFbPages","loadKickstarterCharities","loadPlayStoreApps","then","log","loadCommunityFeats","go","$http","GoogleApiCrawlerService","api","search","mydata","fullDetail","q","keyword","country","query","results","res","key","push","service","model","resultsCollection","keywords","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","HttpService","http","get","baseUrl","$q","dataToURI","result","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","error","promise","createTile","index","getClass","click","current","this","goals","tiles","i","tile","tilenames","$cordovaSQLite","$ionicPopup","login","execute","db","username","password","rows","length","query2","ebtrackerdb","query3","user","item","alert","register","$ionicHistory","query1","occupation","rowsAffected","clearCache","$ionicActionSheet","$timeout","logout","buttons","text","titleText","cancelText","cancel","buttonClicked"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\n        \n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('DataLoadingService', [\"GoogleApiCrawlerService\", function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\n\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", \"$timeout\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory, $timeout) {\n\t$scope.user = {};\n\n\tvar query = \"SELECT user.firstname FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0).firstname)\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n    $scope.logout = function() {\n    $ionicActionSheet.show({\n      buttons: [\n        { text: '<i class=\"icon ion-power\"></i> Log Out' },\n      ],\n     titleText: '',\n     cancelText: 'Cancel',\n     cancel: function() {\n        // add cancel code..\n      },\n      buttonClicked: function(index) {\n        if(index === 0){\n          $scope.class = \"ion-power\";\n          $ionicHistory.clearCache();\n          $state.go('landing');\n        }\n        return true;\n      }\n    });\n  }\n}]);\n}());\n","angular.module('bluehacks.backend', []);\n","angular.module('bluehacks.aboutcontroller', [])\n\n.controller('AboutCtrl', function ($scope) {\n        \n});\n","angular.module('bluehacks.accountcontroller', [])\n\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading) {\n        $scope.getUserAccountDetails = function () {\n            console.debug(\"Get User Account Details\");\n            $ionicLoading.show({\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\n                duration: 2000\n            });\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\n            var firstname = \"Viktor Mikhael\";\n            var lastname = \"Dela Cruz\";\n            $scope.firstname = firstname;\n            $scope.lastname = lastname;\n\n            $ionicLoading.hide();\n        }\n    });\n","angular.module('bluehacks.goalcontroller', [])\n\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\n\n\t$scope.data = {};\n\t$scope.tabs = {};\n\n\t$scope.$on('$ionicView.beforeEnter', function() {\n\t\tif (!DataService.data || !DataService.data.name)\n\t\t\treturn $state.go('sidemenu.home');\n\t\tangular.extend($scope.data, DataService.data);\n\t\t// extend an empty set for loading later\n\t\tangular.extend($scope.tabs, {\n\t\t\tfbPage: [],\n\t\t\tkickstarterCharities: [],\n\t\t\tplayStoreApps: [],\n\t\t\tcommunityFeats: []\n\t\t});\n\t\t// load data in async\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\n\t\t.then(function() {\n\t\t\tconsole.log($scope.tabs);\n\t\t});\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\n\t});\n\n});\n","angular.module('bluehacks.backend')\n\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\n  var api = GoogleApiCrawlerService;\n  $scope.data = {};\n  $scope.search = function() {\n    $ionicLoading.show();\n    var mydata = {\n      fullDetail: false,\n      q: $scope.data.keyword,\n      country: 'ph'\n    };\n    api\n    .query(mydata)\n    .then(function(results) {\n      $scope.data.results = results.results;\n      console.log(results);\n      var res = [];\n      for (var key in results) {\n        res.push(key);\n      }\n    })\n    .finally($ionicLoading.hide);\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('DataLoadingService', function(GoogleApiCrawlerService) {\n\n\tfunction loadFbPages(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadKickstarterCharities(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n\tfunction loadPlayStoreApps(model, resultsCollection) {\n    var keywords = model.name; // first layer\n    console.log(\"Keywords: \" + keywords);\n    return GoogleApiCrawlerService.query({\n      q: keywords // TODO: make relevance to country dynamic\n    }).then(function(response) {\n      // note: there will only be 20 results\n      var results = response.results;\n      angular.forEach(response.results, function(app) {\n        var data = {\n          id: app.appId,\n          url: app.playstoreUrl,\n          icon: app.icon,\n          price: app.price,\n          title: app.title,\n          summary: app.summary,\n          score: app.score\n        };\n        resultsCollection.push(data);\n        console.log(\"Received google store app\", data);\n      });\n    });\n\t};\n\n\tfunction loadCommunityFeats(model, results) {\n\t\t// TODO: async loading here to results\n\t};\n\n  return {\n    loadFbPages: loadFbPages,\n    loadKickstarterCharities: loadKickstarterCharities,\n    loadPlayStoreApps: loadPlayStoreApps,\n    loadCommunityFeats: loadCommunityFeats\n  };\n\n});\n","angular.module('bluehacks.backend')\n\n.service('GoogleApiCrawlerService', function(HttpService) {\n  var baseUrl = \"http://localhost:3000/api/apps/\";\n  var http = HttpService;\n  function query(data) {\n    return http.get(baseUrl, data);\n  };\n  function search(keywords) {\n    return http.get(baseUrl, {q: keywords});\n  };\n  return {\n    query: query,\n    search: search\n  };\n});\n","angular.module('bluehacks.backend')\n\n.service('HttpService', function($q, $http) {\n  function dataToURI(data) {\n    var key, result = [];\n    for (key in data)\n      if (data.hasOwnProperty(key))\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\n    return result.join('&');\n  };\n  function get(url, data, timeout) {\n    var requestURI = url + '?' + dataToURI(data);\n    var deferred = $q.defer();\n    $http({\n      url: requestURI,\n      method: 'GET',\n      timeout: timeout || 7500\n    }).then(function(result) {\n      if (!result || !result.data)\n        deferred.reject('No response');\n      else\n        deferred.resolve(result.data);\n    }, function(error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  };\n  return {\n    dataToURI: dataToURI,\n    get: get\n  };\n});\n","angular.module('bluehacks.homecontrollers', [])\n\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\n  $scope.$on('$ionicView.enter', function() {\n    $scope.current = null;\n  });\n  function createTile(index) {\n    return {\n      url: '../img/' + index + '.png',\n      getClass: function() {\n        return \"tile-show\";\n        /*\n        if ($scope.current == null) {\n          return \"tile-show\";\n        } else if ($scope.current != this) {\n          return \"tile-hide\";\n        } else {\n          return \"tile-current\";\n        }\n        */\n      },\n      click: function() {\n        if ($scope.current == null){\n          // $scope.current = this;\n          // DataService.data = $scope.current;\n          DataService.data = this;\n          console.log(\"Data\", DataService.data)\n          $state.go('sidemenu.goal');\n        }\n\n        else{\n          $scope.current = null;\n        }\n      }\n    };\n  };\n  $http.get('/json/goals.json')\n  .then(function(results) {\n    var goals = results.data;\n    $scope.tiles = [];\n    for (var i = 1; i <= 17; ++i) {\n      var tile = createTile(i);\n      tile.name = goals[i - 1].name;\n      $scope.tiles.push(tile);\n    }\n  });\n\n  $scope.tilenames = [];\n  $scope.tilenames.push(\"No Poverty\");\n  $scope.tilenames.push(\"Zero Hunger\");\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\n  $scope.tilenames.push(\"Quality Education\");\n  $scope.tilenames.push(\"Gender Equality\");\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\n  $scope.tilenames.push(\"Reduced Inequalities\");\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\n  $scope.tilenames.push(\"Climate Action\");\n  $scope.tilenames.push(\"Life Below Water\");\n  $scope.tilenames.push(\"Life on Land\");\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\n  $scope.tilenames.push(\"Partnerships for the Goals\");\n\n});\n","angular.module('bluehacks.landingcontrollers', [])\n\n.controller('LandingCtrl', function($scope, $state, $cordovaSQLite, $ionicPopup) {\n\n\t$scope.data = {};\n\n\t$scope.login = function(){\n    $state.go('sidemenu.home');\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\n          if(result.rows.length > 0){\n            var query2 = \"DELETE FROM current_user\";\n            $cordovaSQLite.execute(ebtrackerdb, query2);\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\n            $cordovaSQLite.execute(ebtrackerdb, query3, [$scope.user.username]);\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\n            var alertPopup = $ionicPopup.alert({\n              title: 'Welcome, ' + result.rows.item(0).username\n            });\n          } else{\n            console.log(\"NO ROWS EXIST\"); \n            var alertPopup = $ionicPopup.alert({\n              title: 'User does not exist'\n            });\n          }\n      }, function(error){\n          console.log(error);\n     })\n\t}\n\n\t$scope.register = function(){\n\t\t$state.go('register');\n\t}\n\n});\n","angular.module('bluehacks.registercontrollers', [])\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory) {\n\n\t$scope.data = {};\n\n\t$scope.register = function(){\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\n        if(result.rows.length >= 1){\n          console.log(\"Record exists: \" + result.rows.item(0).username);\n          return $ionicPopup.alert({\n              title: 'User already exists. Pick another username',\n          });\n        } else{\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\n            console.log(\"Rows affected: \" + result.rowsAffected);\n            console.log($scope.data.username + \" \" + $scope.data.password);\n            $ionicPopup.alert({\n              title: 'Registered user [' + $scope.data.username + ']'\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\n\t\t\t\t\t\t\t\t+ ', you may now login!'\n            }).then(function() {\n\t\t\t\t\t\t\t$state.go('landing');\n\t\t\t\t\t\t});\n            $ionicHistory.clearCache();\n      }, function(error){\n        alert(error);\n        console.log(error);\n      })\n        }\n      }, function(error){\n        alert(error);\n        console.log(error);\n      });\n\t}\n});\n","angular.module('bluehacks.sidemenucontrollers', [])\n\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory, $timeout) {\n\t$scope.user = {};\n\n\tvar query = \"SELECT user.firstname FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\n\t$cordovaSQLite.execute(db, query).then(function(result){\n\t\tconsole.log(result.rows.item(0).firstname)\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\n\t\t$scope.user.username = result.rows.item(0).username;\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\n\t}, function(error){\n          console.log(error);\n    })\n\n    $scope.logout = function() {\n    $ionicActionSheet.show({\n      buttons: [\n        { text: '<i class=\"icon ion-power\"></i> Log Out' },\n      ],\n     titleText: '',\n     cancelText: 'Cancel',\n     cancel: function() {\n        // add cancel code..\n      },\n      buttonClicked: function(index) {\n        if(index === 0){\n          $scope.class = \"ion-power\";\n          $ionicHistory.clearCache();\n          $state.go('landing');\n        }\n        return true;\n      }\n    });\n  }\n});\n"]}
>>>>>>> viktor-1
