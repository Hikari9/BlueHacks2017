{"version":3,"sources":["app-bundle.min.js","backend/module.js","about/js/about.js","account/js/account.js","backend/js/backend.js","backend/js/data-loading.js","backend/js/google-api-crawler.js","backend/js/http.js","goal/js/goal.js","home/js/home.js","landing/js/landing.js","register/js/register.js","sidemenu/js/sidemenu.js"],"names":["angular","module","controller","$scope","$stateParams","$ionicLoading","$cordovaSQLite","$ionicPlatform","user","getUserAccountDetails","console","debug","show","template","duration","hide","$on","query","execute","db","then","result","log","rows","item","username","firstname","lastname","occupation","error","$http","GoogleApiCrawlerService","api","data","search","mydata","fullDetail","q","keyword","country","results","res","key","push","service","HttpService","loadFbPages","model","resultsCollection","loadKickstarterCharities","loadPlayStoreApps","keywords","name","response","forEach","app","id","appId","url","playstoreUrl","icon","price","title","summary","score","loadCommunityFeats","totalprogress","count","get","index","milestones","milestone","progress","http","baseUrl","$q","dataToURI","hasOwnProperty","encodeURIComponent","join","timeout","requestURI","deferred","defer","method","resolve","reject","promise","$state","DataService","DataLoadingService","tabs","extend","fbPage","kickstarterCharities","playStoreApps","communityFeats","go","createTile","getClass","click","current","this","goals","tiles","i","tile","tilenames","$ionicPopup","login","password","length","query2","query3","alert","register","$ionicHistory","query1","rowsAffected","clearCache","$ionicActionSheet"],"mappings":"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","file":"app-bundle.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend', []);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', [\"$scope\", function ($scope) {\r\n        \r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', [\"$scope\", \"$stateParams\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPlatform\", function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\r\n\r\n        $scope.user = {}\r\n\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            $ionicLoading.hide();\r\n        }\r\n        $scope.$on('$ionicView.beforeEnter', function(){\r\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n            $cordovaSQLite.execute(db, query).then(function(result){\r\n            console.log(\"Current user: \" + result.rows.item(0).username);\r\n            $scope.user.firstname = result.rows.item(0).firstname;\r\n            $scope.user.lastname = result.rows.item(0).lastname;\r\n            $scope.user.occupation = result.rows.item(0).occupation;\r\n          }, function(error){\r\n                  console.log(error);\r\n          }) \r\n        })\r\n    }]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', [\"$scope\", \"$ionicLoading\", \"$http\", \"GoogleApiCrawlerService\", function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', [\"HttpService\", \"GoogleApiCrawlerService\", function(HttpService, GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, resultsCollection) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, resultsCollection) {\r\n\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      angular.forEach(response.results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, resultsCollection) {\r\n\t\tvar totalprogress = 0;\r\n\t\tvar count = 0;\r\n    return HttpService.get('/json/goals.json').then(function(results) {\r\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\r\n        console.log('Milestone (' + model.name + ')', milestone);\r\n         milestone.index = index + 1;\r\n\t\t\t\t totalprogress += milestone.progress;\r\n\t\t\t\t count++;\r\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\r\n\r\n        resultsCollection.push(milestone);\r\n\r\n\r\n      });\r\n    });\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', [\"HttpService\", function(HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    return http.get(baseUrl, data);\r\n  };\r\n  function search(keywords) {\r\n    return http.get(baseUrl, {q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.backend')\r\n\r\n.service('HttpService', [\"$q\", \"$http\", function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"DataService\", \"DataLoadingService\", function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n\t\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', [\"$scope\", \"$http\", \"$state\", \"DataService\", function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      index: index, totalprogress: 0,\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', [\"$scope\", \"$state\", \"$ionicLoading\", \"$cordovaSQLite\", \"$ionicPopup\", function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $ionicLoading.show();\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(db, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $ionicLoading.hide();\r\n            $state.go('sidemenu.home');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicPopup\", \"$ionicHistory\", \"$state\", function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n}]);\n}());\n;;(function() {\n\"use strict\";\n\nangular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', [\"$scope\", \"$cordovaSQLite\", \"$ionicActionSheet\", \"$ionicHistory\", function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\r\n\t$scope.user = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function(){\r\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\r\n\t\tconsole.log(result.rows.item(0))\r\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\r\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\r\n\t\t$scope.user.username = result.rows.item(0).username;\r\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\r\n\t}, function(error){\r\n          console.log(error);\r\n    })\r\n\r\n\t})\r\n}]);\n}());\n","angular.module('bluehacks.backend', []);\r\n","angular.module('bluehacks.aboutcontroller', [])\r\n\r\n.controller('AboutCtrl', function ($scope) {\r\n        \r\n});\r\n","angular.module('bluehacks.accountcontroller', [])\r\n\r\n    .controller('AccountCtrl', function ($scope, $stateParams, $ionicLoading, $cordovaSQLite, $ionicPlatform) {\r\n\r\n        $scope.user = {}\r\n\r\n        $scope.getUserAccountDetails = function () {\r\n            console.debug(\"Get User Account Details\");\r\n            $ionicLoading.show({\r\n                template: '<ion-spinner icon=\"lines\"></ion-spinner>',\r\n                duration: 2000\r\n            });\r\n            /*var firstname = localStorage.getItem(\"usr_firstname\");\r\n            var lastname = localStorage.getItem(\"usr_lastname\");*/\r\n            $ionicLoading.hide();\r\n        }\r\n        $scope.$on('$ionicView.beforeEnter', function(){\r\n            var query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n            $cordovaSQLite.execute(db, query).then(function(result){\r\n            console.log(\"Current user: \" + result.rows.item(0).username);\r\n            $scope.user.firstname = result.rows.item(0).firstname;\r\n            $scope.user.lastname = result.rows.item(0).lastname;\r\n            $scope.user.occupation = result.rows.item(0).occupation;\r\n          }, function(error){\r\n                  console.log(error);\r\n          }) \r\n        })\r\n    });\r\n","angular.module('bluehacks.backend')\r\n\r\n.controller('BackendCtrl', function($scope, $ionicLoading, $http, GoogleApiCrawlerService) {\r\n  var api = GoogleApiCrawlerService;\r\n  $scope.data = {};\r\n  $scope.search = function() {\r\n    $ionicLoading.show();\r\n    var mydata = {\r\n      fullDetail: false,\r\n      q: $scope.data.keyword,\r\n      country: 'ph'\r\n    };\r\n    api\r\n    .query(mydata)\r\n    .then(function(results) {\r\n      $scope.data.results = results.results;\r\n      console.log(results);\r\n      var res = [];\r\n      for (var key in results) {\r\n        res.push(key);\r\n      }\r\n    })\r\n    .finally($ionicLoading.hide);\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('DataLoadingService', function(HttpService, GoogleApiCrawlerService) {\r\n\r\n\tfunction loadFbPages(model, resultsCollection) {\r\n\t\t// TODO: async loading here to results\r\n\t};\r\n\r\n\tfunction loadKickstarterCharities(model, resultsCollection) {\r\n\r\n\t};\r\n\r\n\tfunction loadPlayStoreApps(model, resultsCollection) {\r\n    var keywords = model.name; // first layer\r\n    console.log(\"Keywords: \" + keywords);\r\n    return GoogleApiCrawlerService.query({\r\n      q: keywords // TODO: make relevance to country dynamic\r\n    }).then(function(response) {\r\n      // note: there will only be 20 results\r\n      var results = response.results;\r\n      angular.forEach(response.results, function(app) {\r\n        var data = {\r\n          id: app.appId,\r\n          url: app.playstoreUrl,\r\n          icon: app.icon,\r\n          price: app.price,\r\n          title: app.title,\r\n          summary: app.summary,\r\n          score: app.score\r\n        };\r\n        resultsCollection.push(data);\r\n        console.log(\"Received google store app\", data);\r\n      });\r\n    });\r\n\t};\r\n\r\n\tfunction loadCommunityFeats(model, resultsCollection) {\r\n\t\tvar totalprogress = 0;\r\n\t\tvar count = 0;\r\n    return HttpService.get('/json/goals.json').then(function(results) {\r\n      angular.forEach(results[model.index - 1].milestones, function(milestone, index) {\r\n        console.log('Milestone (' + model.name + ')', milestone);\r\n         milestone.index = index + 1;\r\n\t\t\t\t totalprogress += milestone.progress;\r\n\t\t\t\t count++;\r\n\t\t\t\t model.totalprogress = ~~(totalprogress/count*10)/10;\r\n\r\n        resultsCollection.push(milestone);\r\n\r\n\r\n      });\r\n    });\r\n\t};\r\n\r\n  return {\r\n    loadFbPages: loadFbPages,\r\n    loadKickstarterCharities: loadKickstarterCharities,\r\n    loadPlayStoreApps: loadPlayStoreApps,\r\n    loadCommunityFeats: loadCommunityFeats\r\n  };\r\n\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('GoogleApiCrawlerService', function(HttpService) {\r\n  var baseUrl = \"http://localhost:3000/api/apps/\";\r\n  var http = HttpService;\r\n  function query(data) {\r\n    return http.get(baseUrl, data);\r\n  };\r\n  function search(keywords) {\r\n    return http.get(baseUrl, {q: keywords});\r\n  };\r\n  return {\r\n    query: query,\r\n    search: search\r\n  };\r\n});\r\n","angular.module('bluehacks.backend')\r\n\r\n.service('HttpService', function($q, $http) {\r\n  function dataToURI(data) {\r\n    var key, result = [];\r\n    for (key in data)\r\n      if (data.hasOwnProperty(key))\r\n        result.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n    return result.join('&');\r\n  };\r\n  function get(url, data, timeout) {\r\n    var requestURI = url + '?' + dataToURI(data);\r\n    var deferred = $q.defer();\r\n    $http({\r\n      url: requestURI,\r\n      method: 'GET',\r\n      timeout: timeout || 7500\r\n    }).then(function(result) {\r\n      if (!result || !result.data)\r\n        deferred.reject('No response');\r\n      else\r\n        deferred.resolve(result.data);\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n  return {\r\n    dataToURI: dataToURI,\r\n    get: get\r\n  };\r\n});\r\n","angular.module('bluehacks.goalcontroller', [])\r\n\r\n.controller('GoalCtrl', function ($scope, $state, $stateParams, DataService, DataLoadingService) {\r\n\r\n\t$scope.data = {};\r\n\t$scope.tabs = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function() {\r\n\t\tif (!DataService.data || !DataService.data.name)\r\n\t\t\treturn $state.go('sidemenu.home');\r\n\t\tangular.extend($scope.data, DataService.data);\r\n\t\t// extend an empty set for loading later\r\n\t\tangular.extend($scope.tabs, {\r\n\t\t\tfbPage: [],\r\n\t\t\tkickstarterCharities: [],\r\n\t\t\tplayStoreApps: [],\r\n\t\t\tcommunityFeats: []\r\n\t\t});\r\n\t\t// load data in async\r\n\t\tDataLoadingService.loadFbPages($scope.data, $scope.tabs.fbPage);\r\n\t\tDataLoadingService.loadKickstarterCharities($scope.data, $scope.tabs.kickstarterCharities);\r\n\t\tDataLoadingService.loadPlayStoreApps($scope.data, $scope.tabs.playStoreApps)\r\n\t\t.then(function() {\r\n\t\t\tconsole.log($scope.tabs);\r\n\t\t});\r\n\t\tDataLoadingService.loadCommunityFeats($scope.data, $scope.tabs.communityFeats);\r\n\t});\r\n\r\n\t\r\n});\r\n","angular.module('bluehacks.homecontrollers', [])\r\n\r\n.controller('HomeCtrl', function($scope, $http, $state, DataService) {\r\n  $scope.$on('$ionicView.enter', function() {\r\n    $scope.current = null;\r\n  });\r\n  function createTile(index) {\r\n    return {\r\n      url: '../img/' + index + '.png',\r\n      index: index, totalprogress: 0,\r\n      getClass: function() {\r\n        return \"tile-show\";\r\n      },\r\n      click: function() {\r\n        if ($scope.current == null){\r\n          // $scope.current = this;\r\n          // DataService.data = $scope.current;\r\n          DataService.data = this;\r\n          console.log(\"Data\", DataService.data)\r\n          $state.go('sidemenu.goal');\r\n        }\r\n\r\n        else{\r\n          $scope.current = null;\r\n        }\r\n      }\r\n    };\r\n  };\r\n  $http.get('/json/goals.json')\r\n  .then(function(results) {\r\n    var goals = results.data;\r\n    $scope.tiles = [];\r\n    for (var i = 1; i <= 17; ++i) {\r\n      var tile = createTile(i);\r\n      tile.name = goals[i - 1].name;\r\n      $scope.tiles.push(tile);\r\n    }\r\n  });\r\n\r\n  $scope.tilenames = [];\r\n  $scope.tilenames.push(\"No Poverty\");\r\n  $scope.tilenames.push(\"Zero Hunger\");\r\n  $scope.tilenames.push(\"Good Wealth and Well-being\");\r\n  $scope.tilenames.push(\"Quality Education\");\r\n  $scope.tilenames.push(\"Gender Equality\");\r\n  $scope.tilenames.push(\"Clean Water and Sanitation\");\r\n  $scope.tilenames.push(\"Affordable and Clean Energy\");\r\n  $scope.tilenames.push(\"Decent Work and Economic Growth\");\r\n  $scope.tilenames.push(\"Industry, Innovation and Infrastructure\");\r\n  $scope.tilenames.push(\"Reduced Inequalities\");\r\n  $scope.tilenames.push(\"Sustainable Cities and Communities\");\r\n  $scope.tilenames.push(\"Responsible Consumption and Production\");\r\n  $scope.tilenames.push(\"Climate Action\");\r\n  $scope.tilenames.push(\"Life Below Water\");\r\n  $scope.tilenames.push(\"Life on Land\");\r\n  $scope.tilenames.push(\"Peace and Justice Strong Institutions\");\r\n  $scope.tilenames.push(\"Partnerships for the Goals\");\r\n\r\n});\r\n","angular.module('bluehacks.landingcontrollers', [])\r\n\r\n.controller('LandingCtrl', function($scope, $state, $ionicLoading, $cordovaSQLite, $ionicPopup) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.login = function(){\r\n    $ionicLoading.show();\r\n\t\tvar query = \"SELECT * FROM user WHERE username = ? AND password = ?\";\r\n      $cordovaSQLite.execute(db, query, [$scope.data.username, $scope.data.password]).then(function(result){\r\n          if(result.rows.length > 0){\r\n            var query2 = \"DELETE FROM current_user\";\r\n            $cordovaSQLite.execute(db, query2);\r\n            var query3 = \"INSERT INTO current_user (current_user) VALUES (?)\";\r\n            $cordovaSQLite.execute(db, query3, [$scope.data.username]);\r\n            console.log(\"SELECTED -> \" + result.rows.item(0).firstname);\r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'Welcome, ' + result.rows.item(0).username\r\n            });\r\n            $ionicLoading.hide();\r\n            $state.go('sidemenu.home');\r\n          } else{\r\n            console.log(\"NO ROWS EXIST\"); \r\n            var alertPopup = $ionicPopup.alert({\r\n              title: 'User does not exist'\r\n            });\r\n          }\r\n      }, function(error){\r\n          console.log(error);\r\n     })\r\n\t}\r\n\r\n\t$scope.register = function(){\r\n\t\t$state.go('register');\r\n\t}\r\n\r\n});\r\n","angular.module('bluehacks.registercontrollers', [])\r\n.controller('RegisterCtrl', function($scope, $cordovaSQLite, $ionicPopup, $ionicHistory, $state) {\r\n\r\n\t$scope.data = {};\r\n\r\n\t$scope.register = function(){\r\n\t\tvar query1 = \"SELECT username FROM user WHERE username = ?\";\r\n      $cordovaSQLite.execute(db, query1, [$scope.data.username]).then(function(result){\r\n        if(result.rows.length >= 1){\r\n          console.log(\"Record exists: \" + result.rows.item(0).username);\r\n          return $ionicPopup.alert({\r\n              title: 'User already exists. Pick another username',\r\n          });\r\n        } else{\r\n            var query2 = \"INSERT INTO user (username, password, firstname, lastname, occupation) VALUES (?, ?, ?, ?, ?)\";\r\n            $cordovaSQLite.execute(db, query2, [$scope.data.username, $scope.data.password, $scope.data.firstname, $scope.data.lastname, $scope.data.occupation]).then(function(result){\r\n            console.log(\"Rows affected: \" + result.rowsAffected);\r\n            console.log($scope.data.username + \" \" + $scope.data.password);\r\n            $ionicPopup.alert({\r\n              title: 'Registered user [' + $scope.data.username + ']'\r\n\t\t\t\t\t\t\t\t//' with password [' + $scope.data.password + ']'\r\n\t\t\t\t\t\t\t\t+ ', you may now login!'\r\n            }).then(function() {\r\n\t\t\t\t\t\t\t$state.go('landing');\r\n\t\t\t\t\t\t});\r\n            $ionicHistory.clearCache();\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      })\r\n        }\r\n      }, function(error){\r\n        alert(\"Error!\", error);\r\n        console.log(error);\r\n      });\r\n\t}\r\n});\r\n","angular.module('bluehacks.sidemenucontrollers', [])\r\n\r\n.controller('SideMenuCtrl', function($scope, $cordovaSQLite, $ionicActionSheet, $ionicHistory) {\r\n\t$scope.user = {};\r\n\r\n\t$scope.$on('$ionicView.beforeEnter', function(){\r\n\t\tvar query = \"SELECT * FROM user INNER JOIN current_user ON user.username = current_user.current_user\";\r\n\t\t$cordovaSQLite.execute(db, query).then(function(result){\r\n\t\tconsole.log(result.rows.item(0))\r\n\t\t$scope.user.firstname = result.rows.item(0).firstname;\r\n\t\t$scope.user.lastname = result.rows.item(0).lastname;\r\n\t\t$scope.user.username = result.rows.item(0).username;\r\n\t\t$scope.user.occupation = result.rows.item(0).occupation;\r\n\t}, function(error){\r\n          console.log(error);\r\n    })\r\n\r\n\t})\r\n});\r\n"]}